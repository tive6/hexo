{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":1,"renderable":0},{"_id":"themes/landscape/source/CNAME","path":"CNAME","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483012723857},{"_id":"source/404.html","hash":"4d1e12c6261df0114752fbd6bf10baf3d86fe158","modified":1481873477965},{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1481078324723},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1481078324725},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1481078324726},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1481078324734},{"_id":"themes/landscape/_config.yml","hash":"940df5e069e09db58077616d68b16abf70a19839","modified":1481875579357},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1481078324882},{"_id":"source/_data/links.yml","hash":"33e847052e733d5b65406cb95d49d588f2cc53db","modified":1481856025468},{"_id":"source/_posts/inputUpdate.md","hash":"866567503403fbcb2608e384d34348c06cb62f7f","modified":1481872453973},{"_id":"source/_posts/helloWorld.md","hash":"ba1f299ed6fd6e495d163bc9fb78493cee6aab71","modified":1481595330234},{"_id":"source/_posts/js-sort方法的正确使用.md","hash":"87d51677490df61c8244f4312b92b4adbd955671","modified":1481872456747},{"_id":"source/_posts/markDown.md","hash":"b0e2e0e9f07627f9e4305d9c901f7be57caaca80","modified":1481595309869},{"_id":"themes/landscape/languages/default.yml","hash":"d6b552f9b6451165d7a7b77af9e7774373d1a4e5","modified":1481078324737},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1481078324738},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1481078324739},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1481078324742},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"4b16f97a659fec2979340c6c26771a2876fa3d0b","modified":1481600156108},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1481078324746},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1481078324743},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1481078324872},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1481078324874},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1481078324873},{"_id":"themes/landscape/layout/layout.ejs","hash":"1a5005b292d56994adf6618abe5cb48284ba8776","modified":1481617315033},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481078324879},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481078324881},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1481078324882},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1481078324884},{"_id":"themes/landscape/source/CNAME","hash":"9db7b027a58005547512b85971e21432e18aa181","modified":1481078324886},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"e590dcc80446af047fc38bce2da3f15c7b467a3d","modified":1482715226778},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1481078324750},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1481078324749},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"a2915ecc73cc93770154a6d55fbd82d2429fe5d2","modified":1481247629261},{"_id":"themes/landscape/layout/_partial/donate.ejs","hash":"843b138ebc934777eb29b5234f41915a786fd2fd","modified":1481078324759},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"e4591397ae908c8bad51de065d68172c224d4552","modified":1481600007637},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1481078324763},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"303b3cd90422dc06692642fdbd3f16dc3149ff4c","modified":1481875550001},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1481078324767},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1481078324769},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1481078324788},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1481078324784},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1481078324799},{"_id":"themes/landscape/layout/_widget/links.ejs","hash":"330d4061a31902f9648e210dd819d59773bbdf3c","modified":1481598931841},{"_id":"themes/landscape/layout/_widget/popular_posts.ejs","hash":"f9bb68df345c3dc7da59b9d1e2104e8e744fce21","modified":1481078324802},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1481078324869},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1481078324870},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1481872513974},{"_id":"themes/landscape/source/css/_extend.styl","hash":"febf4818c019e7f6d32330cbb08e022bf53c45a0","modified":1481855121891},{"_id":"themes/landscape/source/css/_variables.styl","hash":"684b4a0d842989344986c4ebd447219ce8569356","modified":1481529967109},{"_id":"themes/landscape/source/css/style.styl","hash":"90282133e366f6068d0cf9d4f31277faf91ee1d3","modified":1481527618488},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481078324976},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481078324974},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481078324977},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481078324987},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481078324986},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481078324988},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"b360bb11eaca12038987621a88a3df52ef99d6d8","modified":1481078324997},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1481078325000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1481078325002},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1481078325010},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1481078324770},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1481078324773},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1481078324772},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1481078324774},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1481078324779},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1481078324782},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"ae189557acd7449b211f9d2b4738889160150184","modified":1481854835866},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1481078324892},{"_id":"themes/landscape/source/css/_partial/donate.styl","hash":"3831f0a26173bc4c033494d56394fb839f6a8c04","modified":1481273865145},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1481078324915},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1481078324916},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"8172545460c504163821dfb5f3fb566f8eca4962","modified":1481531449791},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1481078324889},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1481078324917},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1481872499064},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1481078324919},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"311ed8d2ca39f85f5a5875cd24bf48de048974f1","modified":1481872487562},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1481078324922},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1481078324923},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1481078324935},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1481078324936},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1481078324963},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481078324990},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1481078324991},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1481078324993},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1481078324995},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1481078324997},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1481078324996},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1481078324962},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1481078324959},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"ab0628500551c21f364be3078861aa8736098a59","modified":1481078324971},{"_id":"public/404.html","hash":"1cd8b565521797618ea2b89d6da2a52e0a5c0933","modified":1483062034609},{"_id":"public/archives/index.html","hash":"11c6b38907597be9fffa36bb50b9f8a06167074c","modified":1483062034639},{"_id":"public/archives/2016/index.html","hash":"bd74aaacf5d995ba3c3288d953006fb43bd3c507","modified":1483062034646},{"_id":"public/2016/12/16/js-sort方法的正确使用/index.html","hash":"dd3f23dbe39577aa24b670fce6ab1b11c1ad15bf","modified":1483062034648},{"_id":"public/2016/12/01/inputUpdate/index.html","hash":"fde4eb9df93215a43d6a6dc669d29c615c90eaa2","modified":1483062034648},{"_id":"public/2016/11/24/helloWorld/index.html","hash":"8ac108f5f5a8c783a22b2be900007d74b3d6bfa0","modified":1483062034649},{"_id":"public/2016/11/28/markDown/index.html","hash":"88d06799a65be854d8f47ee3f9c18ab5abe66865","modified":1483062034649},{"_id":"public/archives/2016/11/index.html","hash":"3c7f7e7b9835cb347504cc4733498630a24ce0b5","modified":1483062034670},{"_id":"public/archives/2016/12/index.html","hash":"4b9f72d0fa7e12097da348a38b5db17dba035b1d","modified":1483062034671},{"_id":"public/index.html","hash":"8ef8ed4ec19719e09b1064312efa7580b34e0fe9","modified":1483062034672},{"_id":"public/tags/update/index.html","hash":"02414e37116d049b462d3d788626773082a18b4b","modified":1483062034672},{"_id":"public/tags/html/index.html","hash":"31c300e2c9aadd983bd9b44b1b3bf6bf0cc6e2df","modified":1483062034672},{"_id":"public/tags/Markdown/index.html","hash":"af962a0ecb227d7ac9617ab242dadda96d7f5813","modified":1483062034672},{"_id":"public/tags/js/index.html","hash":"043075bdcdbbf5c2c3cf40c0d7a19ad0e89e3508","modified":1483062034672},{"_id":"public/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483062034682},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483062034682},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483062034682},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483062034682},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483062034682},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483062034682},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483062034682},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1483062034683},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1483062034683},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1483062034683},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483062034683},{"_id":"public/CNAME","hash":"9db7b027a58005547512b85971e21432e18aa181","modified":1483062034684},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1483062035965},{"_id":"public/fancybox/jquery.fancybox.css","hash":"27e2c031f7afb695c2b007c8b5ad5cfae559430f","modified":1483062035978},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1483062035978},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483062035978},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1483062035978},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1483062035978},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1483062035978},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483062035979},{"_id":"public/css/style.css","hash":"efe44e37988e9d8933eacd10f082b48c1e7b4739","modified":1483062035979},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1483062035979},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1483062035979},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1483062035993},{"_id":"public/css/images/banner.jpg","hash":"ab0628500551c21f364be3078861aa8736098a59","modified":1483062036025}],"Category":[],"Data":[{"_id":"links","data":{"Blog":"http://zmnaer.com","Github":"https://github.com/zm-1006","Coding":"https://coding.net/u/zmnaer","QQ":"http://zmnaer.com"}}],"Page":[{"_content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404</title>\n</head>\n\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://willxue.top\" homePageName=\"我的博客\"></script>\n</body>\n\n</html>","source":"404.html","raw":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404</title>\n</head>\n\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://willxue.top\" homePageName=\"我的博客\"></script>\n</body>\n\n</html>","date":"2016-12-16T07:31:17.968Z","updated":"2016-12-16T07:31:17.965Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cixb4ud5600005kte6hzex64e","content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404</title>\n</head>\n\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://willxue.top\" homepagename=\"我的博客\"></script>\n</body>\n\n</html>","excerpt":"","more":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404</title>\n</head>\n\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://willxue.top\" homePageName=\"我的博客\"></script>\n</body>\n\n</html>"}],"Post":[{"title":"实现input图片上传预览的各种坑","date":"2016-12-01T08:25:55.000Z","_content":"\ninput实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。\n<!--more-->\n\n大家请看以下代码：\n* html部分：\n```Bash\n<input type=\"file\" id=\"file\" name=\"file\">\n<div id=\"div1\"></div>\n```\n* js部分：\n```Javascript\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\td1.onchange = function(){\n        var fData = file.value;\n        console.log(fData);\n\t}\n}\n```\n一般想到上传，你首先就想获取路径的`路径`、`类型`、`大小`、`内容`等。\n想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。\n\n---\n对于图片路径，相信很多人可能都会用`file.value`来获取，那么恭喜你，你已经顺利进坑了，\n通过`控制台`你会很清晰的看到console.log打印出这样的结果：\n```\nC:/fakepath/logo.gif\n```\n0.0，奇了怪了，`fakepath`是什么鬼？我的文件路径明明是`C:/User/Desktop/01.jpg`，怎么变成这样了，先不去想它，继续尝试用其他方法获取。\n这时，也许有些人因为用惯了`jquery`，会脑洞大开的尝试这样做：\n\n```\nfile.src\n```\n但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。\n至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了`有事问度娘`，\"万能\"的度娘，果不其然给你罗列了数不胜数的相关博客和实例。\n于是乎，烂熟于心的`CV大法`便派上了用场，几经波折，似乎看到了一丝曙光。\n最奇葩的IE浏览器，终于出息了一次，得到了想要的结果`（路径）`，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。\n你可能会看到这样的结果：\n\n\t现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n\t而`chrome`浏览器压根就不支持获取，直接把路径值设置为`\"\"`。\n\n对于input中的`file`对象，当选取图片（文件）后它有个`files`子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括`name`，`size`，上传`时间戳`，`上传路径`等，当然这个`路径`值为`空`。\n因此，你可以根据这几个属性得到对应的属性值。\n```javascript\nname:file.files[0].name;\nsize:file.files[0].size;\n```\n一般获取图片路径，无非是想做预览效果。\n虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。\n这里要提到`FileReader`对象，简单提一下FileReader的`方法`和`事件`:\n\n|\t\t\t\t\t参数/事件\t\t\t\t|\t\t\t\t\t描述\t\t\t\t|\n|:-----------------------------------------:|:-------------------------------------:|\n|方法||\n|abort|中断读取|\n|readAsText(file, [encoding])|将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。|\n|readAsBinaryString(file)|将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件|\n|readAsDataURL(file)|将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。|\n|事件||\n|onabort|数据读取中断时触发|\n|onerror|数据读取出错时触发|\n|onloadstart|数据读取开始时触发|\n|onload|数据读取成功完成时触发|\n|onloadend|数据读取完成时触发，无论成功失败|\n\n具体方法如下：\n```javascript\nvar reader = new FileReader();\nreader.readAsDataURL(file.files[0]);\n//调用readAsDataURL方法来读取选中的图像文件\nreader.onload = function (e){\n\tvar src = e.target.result;\n\tconsole.log(src);\n\tvar oImg = new Image();//创建一个image对象\n\t//也可以innerHTML的形式创建img元素，添加src\n\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n};\n```\n最后终于看到了期待已久的`庐山真面目`，到这里，基本就实现了上传图片预览功能。\n完整代码如下：\n```javascript\n<input type=\"file\" id=\"file\">\n<div id=\"div1\"></div>\n<script>\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\tfile.onchange = function(){\n\t\tvar fData = file.value;\n\t\tconsole.log(fData);//安全模式下的“伪路径”\n\t\tvar reader = new FileReader();\n\t\treader.readAsDataURL(file.files[0]);\n\t\t//调用readAsDataURL方法来读取选中的图像文件\n\t\treader.onload = function (e){\n\t\t\tvar src = e.target.result;\n\t\t\tconsole.log(src);//编码过的图片\n\t\t\tvar oImg = new Image();//创建一个image对象\n\t\t\t//也可以innerHTML的形式创建img元素，添加src\n\t\t\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\t\t\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n\t\t};\n\t}\n}\n</script>\n```\n如有欠缺，不当，可在评论中提出。\n>> 谢谢~O(∩_∩)O~","source":"_posts/inputUpdate.md","raw":"---\ntitle: 实现input图片上传预览的各种坑\ndate: 2016-12-01 16:25:55\ntags:\n  - update\n  - js\n---\n\ninput实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。\n<!--more-->\n\n大家请看以下代码：\n* html部分：\n```Bash\n<input type=\"file\" id=\"file\" name=\"file\">\n<div id=\"div1\"></div>\n```\n* js部分：\n```Javascript\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\td1.onchange = function(){\n        var fData = file.value;\n        console.log(fData);\n\t}\n}\n```\n一般想到上传，你首先就想获取路径的`路径`、`类型`、`大小`、`内容`等。\n想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。\n\n---\n对于图片路径，相信很多人可能都会用`file.value`来获取，那么恭喜你，你已经顺利进坑了，\n通过`控制台`你会很清晰的看到console.log打印出这样的结果：\n```\nC:/fakepath/logo.gif\n```\n0.0，奇了怪了，`fakepath`是什么鬼？我的文件路径明明是`C:/User/Desktop/01.jpg`，怎么变成这样了，先不去想它，继续尝试用其他方法获取。\n这时，也许有些人因为用惯了`jquery`，会脑洞大开的尝试这样做：\n\n```\nfile.src\n```\n但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。\n至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了`有事问度娘`，\"万能\"的度娘，果不其然给你罗列了数不胜数的相关博客和实例。\n于是乎，烂熟于心的`CV大法`便派上了用场，几经波折，似乎看到了一丝曙光。\n最奇葩的IE浏览器，终于出息了一次，得到了想要的结果`（路径）`，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。\n你可能会看到这样的结果：\n\n\t现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n\t而`chrome`浏览器压根就不支持获取，直接把路径值设置为`\"\"`。\n\n对于input中的`file`对象，当选取图片（文件）后它有个`files`子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括`name`，`size`，上传`时间戳`，`上传路径`等，当然这个`路径`值为`空`。\n因此，你可以根据这几个属性得到对应的属性值。\n```javascript\nname:file.files[0].name;\nsize:file.files[0].size;\n```\n一般获取图片路径，无非是想做预览效果。\n虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。\n这里要提到`FileReader`对象，简单提一下FileReader的`方法`和`事件`:\n\n|\t\t\t\t\t参数/事件\t\t\t\t|\t\t\t\t\t描述\t\t\t\t|\n|:-----------------------------------------:|:-------------------------------------:|\n|方法||\n|abort|中断读取|\n|readAsText(file, [encoding])|将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。|\n|readAsBinaryString(file)|将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件|\n|readAsDataURL(file)|将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。|\n|事件||\n|onabort|数据读取中断时触发|\n|onerror|数据读取出错时触发|\n|onloadstart|数据读取开始时触发|\n|onload|数据读取成功完成时触发|\n|onloadend|数据读取完成时触发，无论成功失败|\n\n具体方法如下：\n```javascript\nvar reader = new FileReader();\nreader.readAsDataURL(file.files[0]);\n//调用readAsDataURL方法来读取选中的图像文件\nreader.onload = function (e){\n\tvar src = e.target.result;\n\tconsole.log(src);\n\tvar oImg = new Image();//创建一个image对象\n\t//也可以innerHTML的形式创建img元素，添加src\n\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n};\n```\n最后终于看到了期待已久的`庐山真面目`，到这里，基本就实现了上传图片预览功能。\n完整代码如下：\n```javascript\n<input type=\"file\" id=\"file\">\n<div id=\"div1\"></div>\n<script>\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\tfile.onchange = function(){\n\t\tvar fData = file.value;\n\t\tconsole.log(fData);//安全模式下的“伪路径”\n\t\tvar reader = new FileReader();\n\t\treader.readAsDataURL(file.files[0]);\n\t\t//调用readAsDataURL方法来读取选中的图像文件\n\t\treader.onload = function (e){\n\t\t\tvar src = e.target.result;\n\t\t\tconsole.log(src);//编码过的图片\n\t\t\tvar oImg = new Image();//创建一个image对象\n\t\t\t//也可以innerHTML的形式创建img元素，添加src\n\t\t\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\t\t\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n\t\t};\n\t}\n}\n</script>\n```\n如有欠缺，不当，可在评论中提出。\n>> 谢谢~O(∩_∩)O~","slug":"inputUpdate","published":1,"updated":"2016-12-16T07:14:13.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixb4ud6m00015kteqkzx75kz","content":"<p>input实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。<br><a id=\"more\"></a></p>\n<p>大家请看以下代码：</p>\n<ul>\n<li><p>html部分：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input <span class=\"built_in\">type</span>=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>js部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\td1.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(fData);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>一般想到上传，你首先就想获取路径的<code>路径</code>、<code>类型</code>、<code>大小</code>、<code>内容</code>等。<br>想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。</p>\n<hr>\n<p>对于图片路径，相信很多人可能都会用<code>file.value</code>来获取，那么恭喜你，你已经顺利进坑了，<br>通过<code>控制台</code>你会很清晰的看到console.log打印出这样的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:/fakepath/logo.gif</div></pre></td></tr></table></figure></p>\n<p>0.0，奇了怪了，<code>fakepath</code>是什么鬼？我的文件路径明明是<code>C:/User/Desktop/01.jpg</code>，怎么变成这样了，先不去想它，继续尝试用其他方法获取。<br>这时，也许有些人因为用惯了<code>jquery</code>，会脑洞大开的尝试这样做：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">file.src</div></pre></td></tr></table></figure>\n<p>但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。<br>至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了<code>有事问度娘</code>，”万能”的度娘，果不其然给你罗列了数不胜数的相关博客和实例。<br>于是乎，烂熟于心的<code>CV大法</code>便派上了用场，几经波折，似乎看到了一丝曙光。<br>最奇葩的IE浏览器，终于出息了一次，得到了想要的结果<code>（路径）</code>，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。<br>你可能会看到这样的结果：</p>\n<pre><code>现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n而`chrome`浏览器压根就不支持获取，直接把路径值设置为`&quot;&quot;`。\n</code></pre><p>对于input中的<code>file</code>对象，当选取图片（文件）后它有个<code>files</code>子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括<code>name</code>，<code>size</code>，上传<code>时间戳</code>，<code>上传路径</code>等，当然这个<code>路径</code>值为<code>空</code>。<br>因此，你可以根据这几个属性得到对应的属性值。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:file.files[<span class=\"number\">0</span>].name;</div><div class=\"line\">size:file.files[<span class=\"number\">0</span>].size;</div></pre></td></tr></table></figure></p>\n<p>一般获取图片路径，无非是想做预览效果。<br>虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。<br>这里要提到<code>FileReader</code>对象，简单提一下FileReader的<code>方法</code>和<code>事件</code>:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数/事件</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">abort</td>\n<td style=\"text-align:center\">中断读取</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsText(file, [encoding])</td>\n<td style=\"text-align:center\">将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsBinaryString(file)</td>\n<td style=\"text-align:center\">将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsDataURL(file)</td>\n<td style=\"text-align:center\">将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">事件</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onabort</td>\n<td style=\"text-align:center\">数据读取中断时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onerror</td>\n<td style=\"text-align:center\">数据读取出错时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadstart</td>\n<td style=\"text-align:center\">数据读取开始时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onload</td>\n<td style=\"text-align:center\">数据读取成功完成时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadend</td>\n<td style=\"text-align:center\">数据读取完成时触发，无论成功失败</td>\n</tr>\n</tbody>\n</table>\n<p>具体方法如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">reader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\"><span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(src);</div><div class=\"line\">\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>最后终于看到了期待已久的<code>庐山真面目</code>，到这里，基本就实现了上传图片预览功能。<br>完整代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=\"div1\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\tfile.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(fData);<span class=\"comment\">//安全模式下的“伪路径”</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\treader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t<span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(src);<span class=\"comment\">//编码过的图片</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\t\t\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\t\t\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure></p>\n<p>如有欠缺，不当，可在评论中提出。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>\n","excerpt":"<p>input实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。<br>","more":"</p>\n<p>大家请看以下代码：</p>\n<ul>\n<li><p>html部分：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input <span class=\"built_in\">type</span>=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>js部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\td1.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(fData);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>一般想到上传，你首先就想获取路径的<code>路径</code>、<code>类型</code>、<code>大小</code>、<code>内容</code>等。<br>想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。</p>\n<hr>\n<p>对于图片路径，相信很多人可能都会用<code>file.value</code>来获取，那么恭喜你，你已经顺利进坑了，<br>通过<code>控制台</code>你会很清晰的看到console.log打印出这样的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:/fakepath/logo.gif</div></pre></td></tr></table></figure></p>\n<p>0.0，奇了怪了，<code>fakepath</code>是什么鬼？我的文件路径明明是<code>C:/User/Desktop/01.jpg</code>，怎么变成这样了，先不去想它，继续尝试用其他方法获取。<br>这时，也许有些人因为用惯了<code>jquery</code>，会脑洞大开的尝试这样做：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">file.src</div></pre></td></tr></table></figure>\n<p>但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。<br>至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了<code>有事问度娘</code>，”万能”的度娘，果不其然给你罗列了数不胜数的相关博客和实例。<br>于是乎，烂熟于心的<code>CV大法</code>便派上了用场，几经波折，似乎看到了一丝曙光。<br>最奇葩的IE浏览器，终于出息了一次，得到了想要的结果<code>（路径）</code>，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。<br>你可能会看到这样的结果：</p>\n<pre><code>现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n而`chrome`浏览器压根就不支持获取，直接把路径值设置为`&quot;&quot;`。\n</code></pre><p>对于input中的<code>file</code>对象，当选取图片（文件）后它有个<code>files</code>子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括<code>name</code>，<code>size</code>，上传<code>时间戳</code>，<code>上传路径</code>等，当然这个<code>路径</code>值为<code>空</code>。<br>因此，你可以根据这几个属性得到对应的属性值。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:file.files[<span class=\"number\">0</span>].name;</div><div class=\"line\">size:file.files[<span class=\"number\">0</span>].size;</div></pre></td></tr></table></figure></p>\n<p>一般获取图片路径，无非是想做预览效果。<br>虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。<br>这里要提到<code>FileReader</code>对象，简单提一下FileReader的<code>方法</code>和<code>事件</code>:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数/事件</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">abort</td>\n<td style=\"text-align:center\">中断读取</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsText(file, [encoding])</td>\n<td style=\"text-align:center\">将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsBinaryString(file)</td>\n<td style=\"text-align:center\">将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsDataURL(file)</td>\n<td style=\"text-align:center\">将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">事件</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onabort</td>\n<td style=\"text-align:center\">数据读取中断时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onerror</td>\n<td style=\"text-align:center\">数据读取出错时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadstart</td>\n<td style=\"text-align:center\">数据读取开始时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onload</td>\n<td style=\"text-align:center\">数据读取成功完成时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadend</td>\n<td style=\"text-align:center\">数据读取完成时触发，无论成功失败</td>\n</tr>\n</tbody>\n</table>\n<p>具体方法如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">reader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\"><span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(src);</div><div class=\"line\">\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>最后终于看到了期待已久的<code>庐山真面目</code>，到这里，基本就实现了上传图片预览功能。<br>完整代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=\"div1\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\tfile.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(fData);<span class=\"comment\">//安全模式下的“伪路径”</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\treader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t<span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(src);<span class=\"comment\">//编码过的图片</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\t\t\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\t\t\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure></p>\n<p>如有欠缺，不当，可在评论中提出。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>"},{"title":"大牛之路—Hello World","date":"2016-11-24T08:25:55.000Z","_content":"\n一个程序猿的`超神之路`，往往都是从编写`Hello Word`开始的。\nHello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由`Brian Kernighan`创作。\n<!--more-->\n对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，`BUG`会一直常伴你左右，或喜或悲，都是一种成长。\n下面就让我们一起来领略各种不同编程语言的`HelloWord`吧。\n* Java\n```Java\n// 一个文件中只能有一个共有的类，并且与文件名称一致，大小写注意\npublic class HelloWorld{\n  // 程序的入口\n  public static void main(String args[]){\n    // 向控制台输出信息\n    System.out.println(\"Hello Word ！\");\n  }\n}\n```\n* Python\n```Python\n#!/usr/bin/python\nprint('Hello Word !');\n```\n* PHP\n```Php\necho 'Hello Word !';\n```\n* VB\n```Vb\nModule MainFrm\n    Sub Main()\n        System.Console.WriteLine(\"hello world ！\")\n    End Sub\nEnd Module\n```\n* C\n```C\n#include <stdio.h>\nint main()\n{\n    printf(\"hello world ！\");\n    return 0;\n}\n```\n* C++\n```C++\n#include <iostream>\nusing namespace std;\nint main()\n{\n    cout<<\"hello world ！\"<<flush;\n    return 0;\n}\n```\n* Batch\n```Bash\n@echo off\necho hello world\npause\n```\n* Javascript\n```Javascript\nconsole.log('Hello Word !');\nalert('Hello Word !');\n```\n* HTML\n```Html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Hello Word</title>\n</head>\n<body>\n<div>Hello Word !</div>\n</body>\n</html>\n```\n---\n#### 而我。。。ing...\n<a href=\"http;/zmnaer.com\" alt=\"zmnaer\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\" title=\"WEB前端\"/></a>\n* 感谢阅读，让我们一起来开启大牛之路吧！\n>> come on -0.0-\n\n\n\n","source":"_posts/helloWorld.md","raw":"---\ntitle: 大牛之路—Hello World\ndate: 2016-11-24 16:25:55\ntags:\n  - html\n\n---\n\n一个程序猿的`超神之路`，往往都是从编写`Hello Word`开始的。\nHello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由`Brian Kernighan`创作。\n<!--more-->\n对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，`BUG`会一直常伴你左右，或喜或悲，都是一种成长。\n下面就让我们一起来领略各种不同编程语言的`HelloWord`吧。\n* Java\n```Java\n// 一个文件中只能有一个共有的类，并且与文件名称一致，大小写注意\npublic class HelloWorld{\n  // 程序的入口\n  public static void main(String args[]){\n    // 向控制台输出信息\n    System.out.println(\"Hello Word ！\");\n  }\n}\n```\n* Python\n```Python\n#!/usr/bin/python\nprint('Hello Word !');\n```\n* PHP\n```Php\necho 'Hello Word !';\n```\n* VB\n```Vb\nModule MainFrm\n    Sub Main()\n        System.Console.WriteLine(\"hello world ！\")\n    End Sub\nEnd Module\n```\n* C\n```C\n#include <stdio.h>\nint main()\n{\n    printf(\"hello world ！\");\n    return 0;\n}\n```\n* C++\n```C++\n#include <iostream>\nusing namespace std;\nint main()\n{\n    cout<<\"hello world ！\"<<flush;\n    return 0;\n}\n```\n* Batch\n```Bash\n@echo off\necho hello world\npause\n```\n* Javascript\n```Javascript\nconsole.log('Hello Word !');\nalert('Hello Word !');\n```\n* HTML\n```Html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Hello Word</title>\n</head>\n<body>\n<div>Hello Word !</div>\n</body>\n</html>\n```\n---\n#### 而我。。。ing...\n<a href=\"http;/zmnaer.com\" alt=\"zmnaer\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\" title=\"WEB前端\"/></a>\n* 感谢阅读，让我们一起来开启大牛之路吧！\n>> come on -0.0-\n\n\n\n","slug":"helloWorld","published":1,"updated":"2016-12-13T02:15:30.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixb4ud6u00025kte0nu52jjy","content":"<p>一个程序猿的<code>超神之路</code>，往往都是从编写<code>Hello Word</code>开始的。<br>Hello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由<code>Brian Kernighan</code>创作。<br><a id=\"more\"></a><br>对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，<code>BUG</code>会一直常伴你左右，或喜或悲，都是一种成长。<br>下面就让我们一起来领略各种不同编程语言的<code>HelloWord</code>吧。</p>\n<ul>\n<li><p>Java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 一个文件中只能有一个共有的类，并且与文件名称一致，大小写注意</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span></span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 程序的入口</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 向控制台输出信息</span></div><div class=\"line\">    System.out.println(<span class=\"string\">\"Hello Word ！\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\">print(<span class=\"string\">'Hello Word !'</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>PHP</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'Hello Word !'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>VB</p>\n<figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Module</span> MainFrm</div><div class=\"line\">    <span class=\"keyword\">Sub</span> Main()</div><div class=\"line\">        System.Console.WriteLine(<span class=\"string\">\"hello world ！\"</span>)</div><div class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>C</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"hello world ！\"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>C++</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"hello world ！\"</span>&lt;&lt;flush;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Batch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"built_in\">echo</span> off</div><div class=\"line\"><span class=\"built_in\">echo</span> hello world</div><div class=\"line\">pause</div></pre></td></tr></table></figure>\n</li>\n<li><p>Javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello Word !'</span>);</div><div class=\"line\">alert(<span class=\"string\">'Hello Word !'</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello Word<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello Word !<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"而我。。。ing…\"><a href=\"#而我。。。ing…\" class=\"headerlink\" title=\"而我。。。ing…\"></a>而我。。。ing…</h4><p><a href=\"http;/zmnaer.com\" alt=\"zmnaer\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\" title=\"WEB前端\"></a></p>\n<ul>\n<li>感谢阅读，让我们一起来开启大牛之路吧！<blockquote>\n<blockquote>\n<p>come on -0.0-</p>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n","excerpt":"<p>一个程序猿的<code>超神之路</code>，往往都是从编写<code>Hello Word</code>开始的。<br>Hello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由<code>Brian Kernighan</code>创作。<br>","more":"<br>对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，<code>BUG</code>会一直常伴你左右，或喜或悲，都是一种成长。<br>下面就让我们一起来领略各种不同编程语言的<code>HelloWord</code>吧。</p>\n<ul>\n<li><p>Java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 一个文件中只能有一个共有的类，并且与文件名称一致，大小写注意</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span></span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 程序的入口</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 向控制台输出信息</span></div><div class=\"line\">    System.out.println(<span class=\"string\">\"Hello Word ！\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\">print(<span class=\"string\">'Hello Word !'</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>PHP</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'Hello Word !'</span>;</div></pre></td></tr></table></figure>\n</li>\n<li><p>VB</p>\n<figure class=\"highlight vb\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">Module</span> MainFrm</div><div class=\"line\">    <span class=\"keyword\">Sub</span> Main()</div><div class=\"line\">        System.Console.WriteLine(<span class=\"string\">\"hello world ！\"</span>)</div><div class=\"line\">    <span class=\"keyword\">End</span> <span class=\"keyword\">Sub</span></div><div class=\"line\"><span class=\"keyword\">End</span> <span class=\"keyword\">Module</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>C</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"hello world ！\"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>C++</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"hello world ！\"</span>&lt;&lt;flush;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Batch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"built_in\">echo</span> off</div><div class=\"line\"><span class=\"built_in\">echo</span> hello world</div><div class=\"line\">pause</div></pre></td></tr></table></figure>\n</li>\n<li><p>Javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello Word !'</span>);</div><div class=\"line\">alert(<span class=\"string\">'Hello Word !'</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello Word<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello Word !<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"而我。。。ing…\"><a href=\"#而我。。。ing…\" class=\"headerlink\" title=\"而我。。。ing…\"></a>而我。。。ing…</h4><p><a href=\"http;/zmnaer.com\" alt=\"zmnaer\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\" title=\"WEB前端\"/></a></p>\n<ul>\n<li>感谢阅读，让我们一起来开启大牛之路吧！<blockquote>\n<blockquote>\n<p>come on -0.0-</p>\n</blockquote>\n</blockquote>\n</li>\n</ul>"},{"title":"js-sort方法的正确使用","date":"2016-12-16T05:30:26.000Z","_content":"JavaScript中的sort()方法用于对数组的元素进行排序。其中有许多误区一定要注意，不然就会带来意想不到的结果。\n<!--more-->\n下面就举几个具体事例来说明：\n```Javascript\n// 想要的正常结果:\n['Xiaomi', 'Apple', 'Oppo'].sort(); // ['Apple', 'Oppo', 'Xiaomi'];\n\n// 诡异的结果:\n['Xiaomi', 'apple', 'Oppo'].sort(); // ['Oppo', 'Xiaomi\", 'apple']\n\n// 无法理解的结果:\n[10, 22, 1, 8, 2].sort(); // [1, 10, 2, 22, 8]\n```\n造成第二第结果的原因是，因为sort()方法是根据`字符串`的`ASCII码`进行排序，所谓的ASCII码也就是我们常说的`unicode`编码。\n而`同一个`英文字母，`大写`与`小写`是有区别的，小写字母的ASCII码是排在大写字母的后边，所以得到这种结果也就见怪不怪了。\n* 解决方法其实也很简单：\n```Javascript\nvar arr = ['Xiaomi', 'apple', 'Oppo'];\narr.sort(function (s1, s2) {\n    x1 = s1.toUpperCase();\n    x2 = s2.toUpperCase();\n    if (x1 < x2) {\n        return -1;\n    }\n    if (x1 > x2) {\n        return 1;\n    }\n    return 0;\n}); // ['apple', 'Oppo', 'Xiaomi']\n```\n这里就是把arr中所有元素的大小写做了`统一处理`，要么都是大写，要么都是小写，这样就能避免大小写`unicode码`不同带来的困扰。\n\n造成第三种结果的原因是，因为sort()方法在处理数组时，其实是对数组中的所有元素做了`隐式转换`。\n而`Number`类型的数字都被转换成了`String`类型的字符串，在unicode码比较大小时，是`从前到后`且`逐位`进行比较（先是比较数组中`所有`元素的`第一位`，接着是第二位，第三位...）。\n自然而然，就得到`[1, 10, 2, 22, 8]`这样的结果。\n* 解决办法：\n```Javascript\nvar arr = [10, 22, 1, 8, 2];\narr.sort(function(a,b){\n    return a-b\n});\nconsole.log(arr);// [ 1, 2, 8, 10, 22 ]\n```\n当然你也可以`倒序`排列：\n```Javascript\nvar arr = [10, 22, 1, 8, 2];\narr.sort(function(a,b){\n    return b-a  //这个顺序很重要\n});\nconsole.log(arr);// [ 22, 10, 8, 2, 1 ]\n```\n关于参数`a`和`b`:\n\n        若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。\n        若 a 等于 b，则返回 0。\n        若 a 大于 b，则返回一个大于 0 的值。\nW3C也有相关说明，[以供参考](http://www.w3school.com.cn/jsref/jsref_sort.asp \"sort方法\")。\n>> 谢谢~O(∩_∩)O~\n\n\n\n","source":"_posts/js-sort方法的正确使用.md","raw":"---\ntitle: js-sort方法的正确使用\ndate: 2016-12-16 13:30:26\ntags:\n  - js\n---\nJavaScript中的sort()方法用于对数组的元素进行排序。其中有许多误区一定要注意，不然就会带来意想不到的结果。\n<!--more-->\n下面就举几个具体事例来说明：\n```Javascript\n// 想要的正常结果:\n['Xiaomi', 'Apple', 'Oppo'].sort(); // ['Apple', 'Oppo', 'Xiaomi'];\n\n// 诡异的结果:\n['Xiaomi', 'apple', 'Oppo'].sort(); // ['Oppo', 'Xiaomi\", 'apple']\n\n// 无法理解的结果:\n[10, 22, 1, 8, 2].sort(); // [1, 10, 2, 22, 8]\n```\n造成第二第结果的原因是，因为sort()方法是根据`字符串`的`ASCII码`进行排序，所谓的ASCII码也就是我们常说的`unicode`编码。\n而`同一个`英文字母，`大写`与`小写`是有区别的，小写字母的ASCII码是排在大写字母的后边，所以得到这种结果也就见怪不怪了。\n* 解决方法其实也很简单：\n```Javascript\nvar arr = ['Xiaomi', 'apple', 'Oppo'];\narr.sort(function (s1, s2) {\n    x1 = s1.toUpperCase();\n    x2 = s2.toUpperCase();\n    if (x1 < x2) {\n        return -1;\n    }\n    if (x1 > x2) {\n        return 1;\n    }\n    return 0;\n}); // ['apple', 'Oppo', 'Xiaomi']\n```\n这里就是把arr中所有元素的大小写做了`统一处理`，要么都是大写，要么都是小写，这样就能避免大小写`unicode码`不同带来的困扰。\n\n造成第三种结果的原因是，因为sort()方法在处理数组时，其实是对数组中的所有元素做了`隐式转换`。\n而`Number`类型的数字都被转换成了`String`类型的字符串，在unicode码比较大小时，是`从前到后`且`逐位`进行比较（先是比较数组中`所有`元素的`第一位`，接着是第二位，第三位...）。\n自然而然，就得到`[1, 10, 2, 22, 8]`这样的结果。\n* 解决办法：\n```Javascript\nvar arr = [10, 22, 1, 8, 2];\narr.sort(function(a,b){\n    return a-b\n});\nconsole.log(arr);// [ 1, 2, 8, 10, 22 ]\n```\n当然你也可以`倒序`排列：\n```Javascript\nvar arr = [10, 22, 1, 8, 2];\narr.sort(function(a,b){\n    return b-a  //这个顺序很重要\n});\nconsole.log(arr);// [ 22, 10, 8, 2, 1 ]\n```\n关于参数`a`和`b`:\n\n        若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。\n        若 a 等于 b，则返回 0。\n        若 a 大于 b，则返回一个大于 0 的值。\nW3C也有相关说明，[以供参考](http://www.w3school.com.cn/jsref/jsref_sort.asp \"sort方法\")。\n>> 谢谢~O(∩_∩)O~\n\n\n\n","slug":"js-sort方法的正确使用","published":1,"updated":"2016-12-16T07:14:16.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixb4ud7200045ktexj5ypsj1","content":"<p>JavaScript中的sort()方法用于对数组的元素进行排序。其中有许多误区一定要注意，不然就会带来意想不到的结果。<br><a id=\"more\"></a><br>下面就举几个具体事例来说明：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 想要的正常结果:</span></div><div class=\"line\">[<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'Apple'</span>, <span class=\"string\">'Oppo'</span>].sort(); <span class=\"comment\">// ['Apple', 'Oppo', 'Xiaomi'];</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 诡异的结果:</span></div><div class=\"line\">[<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'apple'</span>, <span class=\"string\">'Oppo'</span>].sort(); <span class=\"comment\">// ['Oppo', 'Xiaomi\", 'apple']</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 无法理解的结果:</span></div><div class=\"line\">[<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>].sort(); <span class=\"comment\">// [1, 10, 2, 22, 8]</span></div></pre></td></tr></table></figure></p>\n<p>造成第二第结果的原因是，因为sort()方法是根据<code>字符串</code>的<code>ASCII码</code>进行排序，所谓的ASCII码也就是我们常说的<code>unicode</code>编码。<br>而<code>同一个</code>英文字母，<code>大写</code>与<code>小写</code>是有区别的，小写字母的ASCII码是排在大写字母的后边，所以得到这种结果也就见怪不怪了。</p>\n<ul>\n<li>解决方法其实也很简单：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'apple'</span>, <span class=\"string\">'Oppo'</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s1, s2</span>) </span>&#123;</div><div class=\"line\">    x1 = s1.toUpperCase();</div><div class=\"line\">    x2 = s2.toUpperCase();</div><div class=\"line\">    <span class=\"keyword\">if</span> (x1 &lt; x2) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (x1 &gt; x2) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;); <span class=\"comment\">// ['apple', 'Oppo', 'Xiaomi']</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里就是把arr中所有元素的大小写做了<code>统一处理</code>，要么都是大写，要么都是小写，这样就能避免大小写<code>unicode码</code>不同带来的困扰。</p>\n<p>造成第三种结果的原因是，因为sort()方法在处理数组时，其实是对数组中的所有元素做了<code>隐式转换</code>。<br>而<code>Number</code>类型的数字都被转换成了<code>String</code>类型的字符串，在unicode码比较大小时，是<code>从前到后</code>且<code>逐位</code>进行比较（先是比较数组中<code>所有</code>元素的<code>第一位</code>，接着是第二位，第三位…）。<br>自然而然，就得到<code>[1, 10, 2, 22, 8]</code>这样的结果。</p>\n<ul>\n<li>解决办法：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> a-b</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [ 1, 2, 8, 10, 22 ]</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>当然你也可以<code>倒序</code>排列：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> b-a  <span class=\"comment\">//这个顺序很重要</span></div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [ 22, 10, 8, 2, 1 ]</span></div></pre></td></tr></table></figure></p>\n<p>关于参数<code>a</code>和<code>b</code>:</p>\n<pre><code>若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。\n若 a 等于 b，则返回 0。\n若 a 大于 b，则返回一个大于 0 的值。\n</code></pre><p>W3C也有相关说明，<a href=\"http://www.w3school.com.cn/jsref/jsref_sort.asp\" title=\"sort方法\" target=\"_blank\" rel=\"external\">以供参考</a>。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>\n","excerpt":"<p>JavaScript中的sort()方法用于对数组的元素进行排序。其中有许多误区一定要注意，不然就会带来意想不到的结果。<br>","more":"<br>下面就举几个具体事例来说明：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 想要的正常结果:</span></div><div class=\"line\">[<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'Apple'</span>, <span class=\"string\">'Oppo'</span>].sort(); <span class=\"comment\">// ['Apple', 'Oppo', 'Xiaomi'];</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 诡异的结果:</span></div><div class=\"line\">[<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'apple'</span>, <span class=\"string\">'Oppo'</span>].sort(); <span class=\"comment\">// ['Oppo', 'Xiaomi\", 'apple']</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 无法理解的结果:</span></div><div class=\"line\">[<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>].sort(); <span class=\"comment\">// [1, 10, 2, 22, 8]</span></div></pre></td></tr></table></figure></p>\n<p>造成第二第结果的原因是，因为sort()方法是根据<code>字符串</code>的<code>ASCII码</code>进行排序，所谓的ASCII码也就是我们常说的<code>unicode</code>编码。<br>而<code>同一个</code>英文字母，<code>大写</code>与<code>小写</code>是有区别的，小写字母的ASCII码是排在大写字母的后边，所以得到这种结果也就见怪不怪了。</p>\n<ul>\n<li>解决方法其实也很简单：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'Xiaomi'</span>, <span class=\"string\">'apple'</span>, <span class=\"string\">'Oppo'</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">s1, s2</span>) </span>&#123;</div><div class=\"line\">    x1 = s1.toUpperCase();</div><div class=\"line\">    x2 = s2.toUpperCase();</div><div class=\"line\">    <span class=\"keyword\">if</span> (x1 &lt; x2) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (x1 &gt; x2) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;); <span class=\"comment\">// ['apple', 'Oppo', 'Xiaomi']</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里就是把arr中所有元素的大小写做了<code>统一处理</code>，要么都是大写，要么都是小写，这样就能避免大小写<code>unicode码</code>不同带来的困扰。</p>\n<p>造成第三种结果的原因是，因为sort()方法在处理数组时，其实是对数组中的所有元素做了<code>隐式转换</code>。<br>而<code>Number</code>类型的数字都被转换成了<code>String</code>类型的字符串，在unicode码比较大小时，是<code>从前到后</code>且<code>逐位</code>进行比较（先是比较数组中<code>所有</code>元素的<code>第一位</code>，接着是第二位，第三位…）。<br>自然而然，就得到<code>[1, 10, 2, 22, 8]</code>这样的结果。</p>\n<ul>\n<li>解决办法：<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> a-b</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [ 1, 2, 8, 10, 22 ]</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>当然你也可以<code>倒序</code>排列：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">22</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">2</span>];</div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> b-a  <span class=\"comment\">//这个顺序很重要</span></div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);<span class=\"comment\">// [ 22, 10, 8, 2, 1 ]</span></div></pre></td></tr></table></figure></p>\n<p>关于参数<code>a</code>和<code>b</code>:</p>\n<pre><code>若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。\n若 a 等于 b，则返回 0。\n若 a 大于 b，则返回一个大于 0 的值。\n</code></pre><p>W3C也有相关说明，<a href=\"http://www.w3school.com.cn/jsref/jsref_sort.asp\" title=\"sort方法\">以供参考</a>。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>"},{"title":"Markdown基本语法","date":"2016-11-28T06:20:45.000Z","_content":"\n这是大标题\n=========\n\n<!--more-->\n\n\n### 这是一个多行文本\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        ``` javascript\n        require.config({\n          baseUrl: 'weixin/js',\n          paths: {\n            'jquery': [\n              '//cdn.bootcss.com/jquery/1.12.4/jquery.min',\n              'lib/jquery/1.12.4/jquery.min'\n            ],\n            'util': 'common/util',\n            'config': 'settings',\n            // 实体类\n            'Result': 'model/result',\n            'User': 'model/user'\n          }\n        });\n        ```\n\n------\n\n### 这是一个单行文本\n        多行文本前加入两个Tab即可\n\n--------\n\n### 文字被些字符包围,多重包围\n> 文字被些字符包围开始\n> > 只要再文字前面加上>空格即可\n\n---\n### 三级标题\n\n---\n\n##### 这是一个\n\n##### 这是一个有title的图片\n![IMG](http://ohecg7vrp.bkt.clouddn.com/01.jpg \"Hello\")\n\n##### 这是一个超链接\n[github](http://zmnaer.com \"zmnaer个人博客\")\n\n##### 这是一个有超链接的图片\n\n[![zz]](http://zmnaer.com)\n[zz]:http://ohecg7vrp.bkt.clouddn.com/14.gif \"blog\"\n\n---\n\n直接输入的文字就是普通文本。需要注意的是要\n换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。\n----\n##### 这是一个换行符\\<br /\\>\n\n---\n\n这是含有`高亮`显示的`文字`。\n\n---\n\n##### 这是一个ul列表\n\n* 昵称：果冻虾仁\n* 别名：隔壁老王\n* 英文名：Jelly\n\n------------\n\n##### 这是一个ol列表\n1. 前端\n3. 后台\n4. 测试\n9. UI\n6. 产品\n2. Android\n3. IOS\n10. 运维\n\n----------\n\n##### 这是一个结构列表\n    * 编程语言\n        * 脚本语言\n            * Python\n* 编程语言\n    * 脚本语言\n        * Python\n\n\n##### 这是一个特别显示的块级\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<br>\n``` javascript\ndocument.getElementById('obj');//javascript\n```\n----\n<img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\">\n----\n\n##### 这是一个HTML标签a链接\n    <a href=\"http://zmnaer.com\">zmnaer</a>\n```Bash\n    <a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n```\n<a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n\n## 表格\n|表头1|表头2|表头3|\n|:-----:|:----:|:-----:|\n|con1|con2|con3|\n|con1|con2|con3|\n\n## 表格2\n|表头1|表头2|\n|-----|-------|\n|A|B|\n|C|D|\n\n","source":"_posts/markDown.md","raw":"---\ntitle: Markdown基本语法\ndate: 2016-11-28 14:20:45\ntags:\n  - Markdown\n\n---\n\n这是大标题\n=========\n\n<!--more-->\n\n\n### 这是一个多行文本\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        ``` javascript\n        require.config({\n          baseUrl: 'weixin/js',\n          paths: {\n            'jquery': [\n              '//cdn.bootcss.com/jquery/1.12.4/jquery.min',\n              'lib/jquery/1.12.4/jquery.min'\n            ],\n            'util': 'common/util',\n            'config': 'settings',\n            // 实体类\n            'Result': 'model/result',\n            'User': 'model/user'\n          }\n        });\n        ```\n\n------\n\n### 这是一个单行文本\n        多行文本前加入两个Tab即可\n\n--------\n\n### 文字被些字符包围,多重包围\n> 文字被些字符包围开始\n> > 只要再文字前面加上>空格即可\n\n---\n### 三级标题\n\n---\n\n##### 这是一个\n\n##### 这是一个有title的图片\n![IMG](http://ohecg7vrp.bkt.clouddn.com/01.jpg \"Hello\")\n\n##### 这是一个超链接\n[github](http://zmnaer.com \"zmnaer个人博客\")\n\n##### 这是一个有超链接的图片\n\n[![zz]](http://zmnaer.com)\n[zz]:http://ohecg7vrp.bkt.clouddn.com/14.gif \"blog\"\n\n---\n\n直接输入的文字就是普通文本。需要注意的是要\n换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。\n----\n##### 这是一个换行符\\<br /\\>\n\n---\n\n这是含有`高亮`显示的`文字`。\n\n---\n\n##### 这是一个ul列表\n\n* 昵称：果冻虾仁\n* 别名：隔壁老王\n* 英文名：Jelly\n\n------------\n\n##### 这是一个ol列表\n1. 前端\n3. 后台\n4. 测试\n9. UI\n6. 产品\n2. Android\n3. IOS\n10. 运维\n\n----------\n\n##### 这是一个结构列表\n    * 编程语言\n        * 脚本语言\n            * Python\n* 编程语言\n    * 脚本语言\n        * Python\n\n\n##### 这是一个特别显示的块级\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<br>\n``` javascript\ndocument.getElementById('obj');//javascript\n```\n----\n<img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\">\n----\n\n##### 这是一个HTML标签a链接\n    <a href=\"http://zmnaer.com\">zmnaer</a>\n```Bash\n    <a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n```\n<a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n\n## 表格\n|表头1|表头2|表头3|\n|:-----:|:----:|:-----:|\n|con1|con2|con3|\n|con1|con2|con3|\n\n## 表格2\n|表头1|表头2|\n|-----|-------|\n|A|B|\n|C|D|\n\n","slug":"markDown","published":1,"updated":"2016-12-13T02:15:09.869Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixb4ud7300055ktef6yvv4ns","content":"<h1 id=\"这是大标题\"><a href=\"#这是大标题\" class=\"headerlink\" title=\"这是大标题\"></a>这是大标题</h1><a id=\"more\"></a>\n<h3 id=\"这是一个多行文本\"><a href=\"#这是一个多行文本\" class=\"headerlink\" title=\"这是一个多行文本\"></a>这是一个多行文本</h3><pre><code>多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</div><div class=\"line\">  <span class=\"attr\">baseUrl</span>: <span class=\"string\">'weixin/js'</span>,</div><div class=\"line\">  <span class=\"attr\">paths</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'jquery'</span>: [</div><div class=\"line\">      <span class=\"string\">'//cdn.bootcss.com/jquery/1.12.4/jquery.min'</span>,</div><div class=\"line\">      <span class=\"string\">'lib/jquery/1.12.4/jquery.min'</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">'util'</span>: <span class=\"string\">'common/util'</span>,</div><div class=\"line\">    <span class=\"string\">'config'</span>: <span class=\"string\">'settings'</span>,</div><div class=\"line\">    <span class=\"comment\">// 实体类</span></div><div class=\"line\">    <span class=\"string\">'Result'</span>: <span class=\"string\">'model/result'</span>,</div><div class=\"line\">    <span class=\"string\">'User'</span>: <span class=\"string\">'model/user'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</code></pre><hr>\n<h3 id=\"这是一个单行文本\"><a href=\"#这是一个单行文本\" class=\"headerlink\" title=\"这是一个单行文本\"></a>这是一个单行文本</h3><pre><code>多行文本前加入两个Tab即可\n</code></pre><hr>\n<h3 id=\"文字被些字符包围-多重包围\"><a href=\"#文字被些字符包围-多重包围\" class=\"headerlink\" title=\"文字被些字符包围,多重包围\"></a>文字被些字符包围,多重包围</h3><blockquote>\n<p>文字被些字符包围开始</p>\n<blockquote>\n<p>只要再文字前面加上&gt;空格即可</p>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h5 id=\"这是一个\"><a href=\"#这是一个\" class=\"headerlink\" title=\"这是一个\"></a>这是一个</h5><h5 id=\"这是一个有title的图片\"><a href=\"#这是一个有title的图片\" class=\"headerlink\" title=\"这是一个有title的图片\"></a>这是一个有title的图片</h5><p><img src=\"http://ohecg7vrp.bkt.clouddn.com/01.jpg\" alt=\"IMG\" title=\"Hello\"></p>\n<h5 id=\"这是一个超链接\"><a href=\"#这是一个超链接\" class=\"headerlink\" title=\"这是一个超链接\"></a>这是一个超链接</h5><p><a href=\"http://zmnaer.com\" title=\"zmnaer个人博客\" target=\"_blank\" rel=\"external\">github</a></p>\n<h5 id=\"这是一个有超链接的图片\"><a href=\"#这是一个有超链接的图片\" class=\"headerlink\" title=\"这是一个有超链接的图片\"></a>这是一个有超链接的图片</h5><p><a href=\"http://zmnaer.com\" target=\"_blank\" rel=\"external\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/14.gif\" alt=\"zz\" title=\"blog\"></a></p>\n<hr>\n<p>直接输入的文字就是普通文本。需要注意的是要</p>\n<h2 id=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\"><a href=\"#换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\" class=\"headerlink\" title=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签 。\"></a>换行的时候不能直接通过回车来换行，需要使用。<br>也就是html里面的标签 。</h2><h5 id=\"这是一个换行符\"><a href=\"#这是一个换行符\" class=\"headerlink\" title=\"这是一个换行符\\\"></a>这是一个换行符\\<br \\=\"\"></h5><hr>\n<p>这是含有<code>高亮</code>显示的<code>文字</code>。</p>\n<hr>\n<h5 id=\"这是一个ul列表\"><a href=\"#这是一个ul列表\" class=\"headerlink\" title=\"这是一个ul列表\"></a>这是一个ul列表</h5><ul>\n<li>昵称：果冻虾仁</li>\n<li>别名：隔壁老王</li>\n<li>英文名：Jelly</li>\n</ul>\n<hr>\n<h5 id=\"这是一个ol列表\"><a href=\"#这是一个ol列表\" class=\"headerlink\" title=\"这是一个ol列表\"></a>这是一个ol列表</h5><ol>\n<li>前端</li>\n<li>后台</li>\n<li>测试</li>\n<li>UI</li>\n<li>产品</li>\n<li>Android</li>\n<li>IOS</li>\n<li>运维</li>\n</ol>\n<hr>\n<h5 id=\"这是一个结构列表\"><a href=\"#这是一个结构列表\" class=\"headerlink\" title=\"这是一个结构列表\"></a>这是一个结构列表</h5><pre><code>* 编程语言\n    * 脚本语言\n        * Python\n</code></pre><ul>\n<li>编程语言<ul>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"这是一个特别显示的块级\"><a href=\"#这是一个特别显示的块级\" class=\"headerlink\" title=\"这是一个特别显示的块级\"></a>这是一个特别显示的块级</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'obj'</span>);<span class=\"comment\">//javascript</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\"></h2><h5 id=\"这是一个HTML标签a链接\"><a href=\"#这是一个HTML标签a链接\" class=\"headerlink\" title=\"这是一个HTML标签a链接\"></a>这是一个HTML标签a链接</h5><pre><code>&lt;a href=&quot;http://zmnaer.com&quot;&gt;zmnaer&lt;/a&gt;\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=<span class=\"string\">\"http://zmnaer.com\"</span> style=<span class=\"string\">\"color:red;\"</span>&gt;zmnaer&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"http://zmnaer.com\" style=\"color:red;\" target=\"_blank\" rel=\"external\">zmnaer</a></p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表头1</th>\n<th style=\"text-align:center\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">con1</td>\n<td style=\"text-align:center\">con2</td>\n<td style=\"text-align:center\">con3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">con1</td>\n<td style=\"text-align:center\">con2</td>\n<td style=\"text-align:center\">con3</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"表格2\"><a href=\"#表格2\" class=\"headerlink\" title=\"表格2\"></a>表格2</h2><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>B</td>\n</tr>\n<tr>\n<td>C</td>\n<td>D</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"<h1 id=\"这是大标题\"><a href=\"#这是大标题\" class=\"headerlink\" title=\"这是大标题\"></a>这是大标题</h1>","more":"<h3 id=\"这是一个多行文本\"><a href=\"#这是一个多行文本\" class=\"headerlink\" title=\"这是一个多行文本\"></a>这是一个多行文本</h3><pre><code>多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</div><div class=\"line\">  <span class=\"attr\">baseUrl</span>: <span class=\"string\">'weixin/js'</span>,</div><div class=\"line\">  <span class=\"attr\">paths</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'jquery'</span>: [</div><div class=\"line\">      <span class=\"string\">'//cdn.bootcss.com/jquery/1.12.4/jquery.min'</span>,</div><div class=\"line\">      <span class=\"string\">'lib/jquery/1.12.4/jquery.min'</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">'util'</span>: <span class=\"string\">'common/util'</span>,</div><div class=\"line\">    <span class=\"string\">'config'</span>: <span class=\"string\">'settings'</span>,</div><div class=\"line\">    <span class=\"comment\">// 实体类</span></div><div class=\"line\">    <span class=\"string\">'Result'</span>: <span class=\"string\">'model/result'</span>,</div><div class=\"line\">    <span class=\"string\">'User'</span>: <span class=\"string\">'model/user'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</code></pre><hr>\n<h3 id=\"这是一个单行文本\"><a href=\"#这是一个单行文本\" class=\"headerlink\" title=\"这是一个单行文本\"></a>这是一个单行文本</h3><pre><code>多行文本前加入两个Tab即可\n</code></pre><hr>\n<h3 id=\"文字被些字符包围-多重包围\"><a href=\"#文字被些字符包围-多重包围\" class=\"headerlink\" title=\"文字被些字符包围,多重包围\"></a>文字被些字符包围,多重包围</h3><blockquote>\n<p>文字被些字符包围开始</p>\n<blockquote>\n<p>只要再文字前面加上&gt;空格即可</p>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h5 id=\"这是一个\"><a href=\"#这是一个\" class=\"headerlink\" title=\"这是一个\"></a>这是一个</h5><h5 id=\"这是一个有title的图片\"><a href=\"#这是一个有title的图片\" class=\"headerlink\" title=\"这是一个有title的图片\"></a>这是一个有title的图片</h5><p><img src=\"http://ohecg7vrp.bkt.clouddn.com/01.jpg\" alt=\"IMG\" title=\"Hello\"></p>\n<h5 id=\"这是一个超链接\"><a href=\"#这是一个超链接\" class=\"headerlink\" title=\"这是一个超链接\"></a>这是一个超链接</h5><p><a href=\"http://zmnaer.com\" title=\"zmnaer个人博客\">github</a></p>\n<h5 id=\"这是一个有超链接的图片\"><a href=\"#这是一个有超链接的图片\" class=\"headerlink\" title=\"这是一个有超链接的图片\"></a>这是一个有超链接的图片</h5><p><a href=\"http://zmnaer.com\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/14.gif\" alt=\"zz\" title=\"blog\"></a></p>\n<hr>\n<p>直接输入的文字就是普通文本。需要注意的是要</p>\n<h2 id=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\"><a href=\"#换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\" class=\"headerlink\" title=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签 。\"></a>换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。</h2><h5 id=\"这是一个换行符\"><a href=\"#这是一个换行符\" class=\"headerlink\" title=\"这是一个换行符\\\"></a>这是一个换行符\\<br /\\></h5><hr>\n<p>这是含有<code>高亮</code>显示的<code>文字</code>。</p>\n<hr>\n<h5 id=\"这是一个ul列表\"><a href=\"#这是一个ul列表\" class=\"headerlink\" title=\"这是一个ul列表\"></a>这是一个ul列表</h5><ul>\n<li>昵称：果冻虾仁</li>\n<li>别名：隔壁老王</li>\n<li>英文名：Jelly</li>\n</ul>\n<hr>\n<h5 id=\"这是一个ol列表\"><a href=\"#这是一个ol列表\" class=\"headerlink\" title=\"这是一个ol列表\"></a>这是一个ol列表</h5><ol>\n<li>前端</li>\n<li>后台</li>\n<li>测试</li>\n<li>UI</li>\n<li>产品</li>\n<li>Android</li>\n<li>IOS</li>\n<li>运维</li>\n</ol>\n<hr>\n<h5 id=\"这是一个结构列表\"><a href=\"#这是一个结构列表\" class=\"headerlink\" title=\"这是一个结构列表\"></a>这是一个结构列表</h5><pre><code>* 编程语言\n    * 脚本语言\n        * Python\n</code></pre><ul>\n<li>编程语言<ul>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"这是一个特别显示的块级\"><a href=\"#这是一个特别显示的块级\" class=\"headerlink\" title=\"这是一个特别显示的块级\"></a>这是一个特别显示的块级</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'obj'</span>);<span class=\"comment\">//javascript</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\"></h2><h5 id=\"这是一个HTML标签a链接\"><a href=\"#这是一个HTML标签a链接\" class=\"headerlink\" title=\"这是一个HTML标签a链接\"></a>这是一个HTML标签a链接</h5><pre><code>&lt;a href=&quot;http://zmnaer.com&quot;&gt;zmnaer&lt;/a&gt;\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=<span class=\"string\">\"http://zmnaer.com\"</span> style=<span class=\"string\">\"color:red;\"</span>&gt;zmnaer&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a></p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">表头1</th>\n<th style=\"text-align:center\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">con1</td>\n<td style=\"text-align:center\">con2</td>\n<td style=\"text-align:center\">con3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">con1</td>\n<td style=\"text-align:center\">con2</td>\n<td style=\"text-align:center\">con3</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"表格2\"><a href=\"#表格2\" class=\"headerlink\" title=\"表格2\"></a>表格2</h2><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>B</td>\n</tr>\n<tr>\n<td>C</td>\n<td>D</td>\n</tr>\n</tbody>\n</table>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cixb4ud6m00015kteqkzx75kz","tag_id":"cixb4ud6y00035kteou1snwiu","_id":"cixb4ud7900085kteirt36gx3"},{"post_id":"cixb4ud6m00015kteqkzx75kz","tag_id":"cixb4ud7600065kteyh5zegqw","_id":"cixb4ud7a00095kte2716xzm3"},{"post_id":"cixb4ud6u00025kte0nu52jjy","tag_id":"cixb4ud7700075ktegrn4qk2h","_id":"cixb4ud7d000b5kteuybcem4v"},{"post_id":"cixb4ud7200045ktexj5ypsj1","tag_id":"cixb4ud7600065kteyh5zegqw","_id":"cixb4ud7e000d5kteplcfbj9f"},{"post_id":"cixb4ud7300055ktef6yvv4ns","tag_id":"cixb4ud7e000c5ktek34f1ttg","_id":"cixb4ud7f000e5kte1kff6jyb"}],"Tag":[{"name":"update","_id":"cixb4ud6y00035kteou1snwiu"},{"name":"js","_id":"cixb4ud7600065kteyh5zegqw"},{"name":"html","_id":"cixb4ud7700075ktegrn4qk2h"},{"name":"Markdown","_id":"cixb4ud7e000c5ktek34f1ttg"}]}}