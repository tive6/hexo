{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/01.jpg","path":"css/images/01.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/02.jpg","path":"css/images/02.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/03.jpg","path":"css/images/03.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/04.jpg","path":"css/images/04.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/06.jpg","path":"css/images/06.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/05.jpg","path":"css/images/05.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/07.gif","path":"css/images/07.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/08.jpg","path":"css/images/08.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/09.jpg","path":"css/images/09.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/10.jpg","path":"css/images/10.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/11.jpg","path":"css/images/11.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/12.jpg","path":"css/images/12.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/13.jpg","path":"css/images/13.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/14.gif","path":"css/images/14.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/15.jpg","path":"css/images/15.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/17.jpg","path":"css/images/17.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/16.jpg","path":"css/images/16.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/18.jpg","path":"css/images/18.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/22.jpg","path":"css/images/22.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/23.png","path":"css/images/23.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/24.jpg","path":"css/images/24.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/20.gif","path":"css/images/20.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/19.gif","path":"css/images/19.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/21.png","path":"css/images/21.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1479968217762},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1479968217768},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1479968217763},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1479968217763},{"_id":"themes/landscape/_config.yml","hash":"7b8f5f718f45ca8c5438a03483a9e6c1d1e5f3c0","modified":1480659760339},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1479968217767},{"_id":"source/_posts/My-first-Post.md","hash":"66b31ffc54adeeb5b05c300c13b7dd37b092f83b","modified":1480469206953},{"_id":"source/_posts/hello-world.md","hash":"8684232a7568f5253e899109e80bcf2f2aecc61f","modified":1480659248179},{"_id":"source/_posts/inputUpdate.md","hash":"82dbf1df8a507113858432a70d2199acc22e16c0","modified":1480652300500},{"_id":"themes/landscape/languages/default.yml","hash":"c01dda61351e19f7094629876fe9ffb4da62c770","modified":1480659872188},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1479968217788},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1479968217788},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1479968217789},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1479968217789},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1ef52d096f074d88399ef1fa80d2f78a81d4b83c","modified":1480659944534},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1479968217789},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1479968217793},{"_id":"themes/landscape/source/CNAME","hash":"9db7b027a58005547512b85971e21432e18aa181","modified":1479970409073},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1479968217783},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1479968217787},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1479968217783},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1479968217789},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1479968217788},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1479968217788},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1479968217784},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1479968217837},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1479968217838},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1479968217839},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479968217831},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479968217830},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479968217827},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479968217831},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479968217831},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479968217831},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"27e2c031f7afb695c2b007c8b5ad5cfae559430f","modified":1480499201055},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1479968217832},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1479968217835},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1479968217837},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"ce96e916f53f34f21f033df5c964dd0268450e3e","modified":1480469081511},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1479968217821},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1479968217823},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"2e39e6630d464d7aca8e871b64537025ca50a995","modified":1480469435902},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1479968217824},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1479968217823},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1479968217824},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1479968217826},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1479968217824},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1479968217827},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1479968217827},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1479968217830},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1479968217829},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1479968217829},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1479968217830},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1479968217875},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1479968217876},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1479968217875},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1479968217877},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1479968217876},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1479968217878},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1479968217877},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1479968217878},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1479968217878},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1479968217877},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1479968217874},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1479968217879},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1479968217880},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1479968217875},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1479968217879},{"_id":"themes/landscape/source/css/images/01.jpg","hash":"d7b001436e168cc55937df6dfc248826db81f0f8","modified":1468217942004},{"_id":"themes/landscape/source/css/images/02.jpg","hash":"d9b0a0ac7422be2e75c0819a5b93cd2f342211f9","modified":1468547746339},{"_id":"themes/landscape/source/css/images/03.jpg","hash":"c6ba9358d9173a355036568910ab9ad3f64ab41e","modified":1469512058224},{"_id":"themes/landscape/source/css/images/04.jpg","hash":"f372ebfba4b7ca5d2d7f574ff9fa0dd4b353d04e","modified":1468461632271},{"_id":"themes/landscape/source/css/images/06.jpg","hash":"6e2dc42d209320883833592369cabff22fdbb303","modified":1469417189090},{"_id":"themes/landscape/source/css/images/05.jpg","hash":"5f71cb855e89ebfedbd334cb8743519dad6f06d9","modified":1468379889746},{"_id":"themes/landscape/source/css/images/07.gif","hash":"bf73b575d18d773733f7114d72a5ce4934029741","modified":1468816597478},{"_id":"themes/landscape/source/css/images/08.jpg","hash":"c45ce536b59ece87f127fc7eef73063223cb2baf","modified":1468489081275},{"_id":"themes/landscape/source/css/images/09.jpg","hash":"b4db2238d738e5cc6b1872bff35a61e471f689fc","modified":1469085499634},{"_id":"themes/landscape/source/css/images/10.jpg","hash":"b6b899a385e4b17fdf2cafc8fb3f1bca15a039a5","modified":1468399602176},{"_id":"themes/landscape/source/css/images/11.jpg","hash":"151ab514eee46870add046d10ec8908ee332e1c4","modified":1469079813727},{"_id":"themes/landscape/source/css/images/12.jpg","hash":"3fe0ddce771157c6b6a42d2ef66ab29dc2cc55f1","modified":1468827898252},{"_id":"themes/landscape/source/css/images/13.jpg","hash":"bf848b7dc62c65ca737f66c048806a74a3c4d73e","modified":1468228164782},{"_id":"themes/landscape/source/css/images/14.gif","hash":"e7fb8c7fcf45f628ca1752191a183b9c52d9b367","modified":1469409751126},{"_id":"themes/landscape/source/css/images/15.jpg","hash":"df187aa52ee8c664b53689e636604d426da2f812","modified":1469089872801},{"_id":"themes/landscape/source/css/images/17.jpg","hash":"9c0067b38ead72d830e68f400b97466d86b7d593","modified":1469508924772},{"_id":"themes/landscape/source/css/images/16.jpg","hash":"d58ef8acb529da06d6dc58df952578cff75d76a8","modified":1468829582453},{"_id":"themes/landscape/source/css/images/18.jpg","hash":"c6f38a67fb188b1e914cbef3e8b0d1cb0f69900c","modified":1468461757303},{"_id":"themes/landscape/source/css/images/22.jpg","hash":"01727bdc7761e33e76005b1484343d966d0099b8","modified":1468484797496},{"_id":"themes/landscape/source/css/images/23.png","hash":"9540c3e087cb7a3f516d076e3de594728859dc77","modified":1469525165807},{"_id":"themes/landscape/source/css/images/24.jpg","hash":"c617904f3b3eaaa149e7c62d1638d182b5e24de5","modified":1469001359022},{"_id":"themes/landscape/source/css/images/20.gif","hash":"7ad5ae09433d56dee4d885f18e783dfdc59faee1","modified":1468478030332},{"_id":"themes/landscape/source/css/images/19.gif","hash":"b63bec444bd5788897e840dcd4820960503fbc1f","modified":1468227745269},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479968217866},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479968217869},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1479968217870},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479968217871},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1479968217871},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1479968217873},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1479968217867},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1479968217868},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1479968217867},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1479968217870},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1479968217868},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1479968217865},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1479968217882},{"_id":"themes/landscape/source/css/images/21.png","hash":"ec57e3277dd05d40f452caa1398f88072f0b9f79","modified":1468912414809},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1479968217881},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"ab0628500551c21f364be3078861aa8736098a59","modified":1480400263594},{"_id":"public/2016/11/28/My-first-Post/index.html","hash":"fb06cb64138be51b235a9b952ccb7674bbe2c816","modified":1480660103616},{"_id":"public/2016/11/24/hello-world/index.html","hash":"81b1d8449d6825121b2ce83c7768fdc8c1ead1ac","modified":1480660103616},{"_id":"public/archives/index.html","hash":"3160fdbb1b7b50d4f4315a1297414901dbc7063d","modified":1480660103617},{"_id":"public/archives/2016/index.html","hash":"5757258e703af6b3f09a62671294aeda8228f996","modified":1480660103617},{"_id":"public/archives/2016/11/index.html","hash":"e0416acbf0b76b39fb8714f7adf3f42231af06da","modified":1480660103617},{"_id":"public/index.html","hash":"e48a484e9d4c2099f538a11e15b22de327ce518f","modified":1480660103617},{"_id":"public/archives/2016/12/index.html","hash":"144cf76a5233a6528252acb77283fe7a1eb11544","modified":1480660103617},{"_id":"public/2016/12/01/inputUpdate/index.html","hash":"e7970818853179d8988a9499bd25649f78e34c1a","modified":1480660103617},{"_id":"public/CNAME","hash":"9db7b027a58005547512b85971e21432e18aa181","modified":1480659181274},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1480659181274},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1480659181275},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1480659181275},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1480659181275},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1480659181275},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1480659181275},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1480659181276},{"_id":"public/css/images/01.jpg","hash":"d7b001436e168cc55937df6dfc248826db81f0f8","modified":1480659181276},{"_id":"public/css/images/02.jpg","hash":"d9b0a0ac7422be2e75c0819a5b93cd2f342211f9","modified":1480659181276},{"_id":"public/css/images/04.jpg","hash":"f372ebfba4b7ca5d2d7f574ff9fa0dd4b353d04e","modified":1480659181276},{"_id":"public/css/images/03.jpg","hash":"c6ba9358d9173a355036568910ab9ad3f64ab41e","modified":1480659181276},{"_id":"public/css/images/06.jpg","hash":"6e2dc42d209320883833592369cabff22fdbb303","modified":1480659181276},{"_id":"public/css/images/05.jpg","hash":"5f71cb855e89ebfedbd334cb8743519dad6f06d9","modified":1480659181277},{"_id":"public/css/images/08.jpg","hash":"c45ce536b59ece87f127fc7eef73063223cb2baf","modified":1480659181277},{"_id":"public/css/images/10.jpg","hash":"b6b899a385e4b17fdf2cafc8fb3f1bca15a039a5","modified":1480659181277},{"_id":"public/css/images/09.jpg","hash":"b4db2238d738e5cc6b1872bff35a61e471f689fc","modified":1480659181277},{"_id":"public/css/images/07.gif","hash":"bf73b575d18d773733f7114d72a5ce4934029741","modified":1480659181277},{"_id":"public/css/images/11.jpg","hash":"151ab514eee46870add046d10ec8908ee332e1c4","modified":1480659181277},{"_id":"public/css/images/13.jpg","hash":"bf848b7dc62c65ca737f66c048806a74a3c4d73e","modified":1480659181277},{"_id":"public/css/images/14.gif","hash":"e7fb8c7fcf45f628ca1752191a183b9c52d9b367","modified":1480659181277},{"_id":"public/css/images/15.jpg","hash":"df187aa52ee8c664b53689e636604d426da2f812","modified":1480659181277},{"_id":"public/css/images/17.jpg","hash":"9c0067b38ead72d830e68f400b97466d86b7d593","modified":1480659181277},{"_id":"public/css/images/18.jpg","hash":"c6f38a67fb188b1e914cbef3e8b0d1cb0f69900c","modified":1480659181277},{"_id":"public/css/images/16.jpg","hash":"d58ef8acb529da06d6dc58df952578cff75d76a8","modified":1480659181278},{"_id":"public/css/images/22.jpg","hash":"01727bdc7761e33e76005b1484343d966d0099b8","modified":1480659181278},{"_id":"public/css/images/23.png","hash":"9540c3e087cb7a3f516d076e3de594728859dc77","modified":1480659181278},{"_id":"public/css/images/12.jpg","hash":"3fe0ddce771157c6b6a42d2ef66ab29dc2cc55f1","modified":1480659181278},{"_id":"public/css/images/20.gif","hash":"7ad5ae09433d56dee4d885f18e783dfdc59faee1","modified":1480659181278},{"_id":"public/css/images/24.jpg","hash":"c617904f3b3eaaa149e7c62d1638d182b5e24de5","modified":1480659181278},{"_id":"public/css/images/19.gif","hash":"b63bec444bd5788897e840dcd4820960503fbc1f","modified":1480659181278},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1480659181278},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1480659182423},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1480659182423},{"_id":"public/fancybox/jquery.fancybox.css","hash":"27e2c031f7afb695c2b007c8b5ad5cfae559430f","modified":1480659182432},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1480659182433},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1480659182433},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1480659182433},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1480659182433},{"_id":"public/css/images/21.png","hash":"ec57e3277dd05d40f452caa1398f88072f0b9f79","modified":1480659182433},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1480659182433},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1480659182447},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1480659182447},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1480659182447},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1480659182447},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1480659182448},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1480659182460},{"_id":"public/css/images/banner.jpg","hash":"ab0628500551c21f364be3078861aa8736098a59","modified":1480659182496}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","date":"2016-11-24T08:25:55.000Z","_content":"\n一个程序猿的`超神之路`，往往都是从编写`Hello Word`开始的。\nHello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由`Brian Kernighan`创作。\n对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，BUG会一直常伴你左右。\n\n\n\n\n\n\n\n\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-11-24 16:25:55\ntags:\n---\n\n一个程序猿的`超神之路`，往往都是从编写`Hello Word`开始的。\nHello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由`Brian Kernighan`创作。\n对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，BUG会一直常伴你左右。\n\n\n\n\n\n\n\n\n\n","slug":"hello-world","published":1,"updated":"2016-12-02T06:14:08.179Z","_id":"ciw7e8voz0000c8te3i9nlzc1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一个程序猿的<code>超神之路</code>，往往都是从编写<code>Hello Word</code>开始的。<br>Hello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由<code>Brian Kernighan</code>创作。<br>对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，BUG会一直常伴你左右。</p>\n","excerpt":"","more":"<p>一个程序猿的<code>超神之路</code>，往往都是从编写<code>Hello Word</code>开始的。<br>Hello World ，中文意思：你好，世界。世界上的第一个程序就是Hello World，由<code>Brian Kernighan</code>创作。<br>对于程序猿来说，Hello Word显得很熟悉，很亲切。它的出现意味着你即将踏入漫长而有趣的程序之旅，这一路上你并不孤单，BUG会一直常伴你左右。</p>\n"},{"title":"markDown基本语法","date":"2016-11-28T06:20:45.000Z","_content":"\n只是大标题\n=========\n\n<!--more-->\n\n\n### 这是一个多行文本\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        ``` javascript\n        require.config({\n          baseUrl: 'weixin/js',\n          paths: {\n            'jquery': [\n              '//cdn.bootcss.com/jquery/1.12.4/jquery.min',\n              'lib/jquery/1.12.4/jquery.min'\n            ],\n            'util': 'common/util',\n            'config': 'settings',\n            // 实体类\n            'Result': 'model/result',\n            'User': 'model/user'\n          }\n        });\n        ```\n\n------\n\n### 这是一个单行文本\n        多行文本前加入两个Tab即可\n\n\n-----\n\n### 文字被些字符包围\n> 文字被些字符包围\n>\n> 只要再文字前面加上>空格即可\n>\n> 如果你要换行的话,新起一行,输入>空格即可,后面不接文字\n> 但> 只能放在行首才有效\n\n--------\n\n### 文字被些字符包围,多重包围\n> 文字被些字符包围开始\n>\n> > 只要再文字前面加上>空格即可\n>\n>  > > 如果你要换行的话,新起一行,输入>空格即可,后面不接文字\n>\n> > > > 但> 只能放在行首才有效\n\n---\n### 三级标题\n\n---\n\n##### 这是一个\n\n##### 这是一个有title的图片\n![IMG](http://ohecg7vrp.bkt.clouddn.com/01.jpg \"Hello\")\n\n##### 这是一个超链接\n[github](http://zmnaer.com \"zmnaer个人博客\")\n\n##### 这是一个有超链接的图片\n\n[![zz]](http://zmnaer.com)\n[zz]:http://ohecg7vrp.bkt.clouddn.com/14.gif \"blog\"\n\n---\n\n直接输入的文字就是普通文本。需要注意的是要\n换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。\n----\n##### 这是一个换行符\\<br /\\>\n\n---\n\n这是含有`高亮`显示的`文字`。\n\n---\n\n##### 这是一个ul列表\n\n* 昵称：果冻虾仁\n* 别名：隔壁老王\n* 英文名：Jelly\n\n------------\n\n##### 这是一个ol列表\n1. 前端\n3. 后台\n4. 测试\n9. UI\n6. 产品\n2. Android\n3. IOS\n10. 运维\n\n----------\n\n##### 这是一个结构列表\n\n* 编程语言\n    * 脚本语言\n        * Python\n\n\n##### 这是一个特别显示的块级\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<br>\n``` javascript\ndocument.getElementById('obj');//javascript\n```\n----\n<img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\">\n----\n\n<a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n\n----\n\n","source":"_posts/My-first-Post.md","raw":"---\ntitle: markDown基本语法\ndate: 2016-11-28 14:20:45\ntags:\n---\n\n只是大标题\n=========\n\n<!--more-->\n\n\n### 这是一个多行文本\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        多行文本前加入两个Tab即可\n        ``` javascript\n        require.config({\n          baseUrl: 'weixin/js',\n          paths: {\n            'jquery': [\n              '//cdn.bootcss.com/jquery/1.12.4/jquery.min',\n              'lib/jquery/1.12.4/jquery.min'\n            ],\n            'util': 'common/util',\n            'config': 'settings',\n            // 实体类\n            'Result': 'model/result',\n            'User': 'model/user'\n          }\n        });\n        ```\n\n------\n\n### 这是一个单行文本\n        多行文本前加入两个Tab即可\n\n\n-----\n\n### 文字被些字符包围\n> 文字被些字符包围\n>\n> 只要再文字前面加上>空格即可\n>\n> 如果你要换行的话,新起一行,输入>空格即可,后面不接文字\n> 但> 只能放在行首才有效\n\n--------\n\n### 文字被些字符包围,多重包围\n> 文字被些字符包围开始\n>\n> > 只要再文字前面加上>空格即可\n>\n>  > > 如果你要换行的话,新起一行,输入>空格即可,后面不接文字\n>\n> > > > 但> 只能放在行首才有效\n\n---\n### 三级标题\n\n---\n\n##### 这是一个\n\n##### 这是一个有title的图片\n![IMG](http://ohecg7vrp.bkt.clouddn.com/01.jpg \"Hello\")\n\n##### 这是一个超链接\n[github](http://zmnaer.com \"zmnaer个人博客\")\n\n##### 这是一个有超链接的图片\n\n[![zz]](http://zmnaer.com)\n[zz]:http://ohecg7vrp.bkt.clouddn.com/14.gif \"blog\"\n\n---\n\n直接输入的文字就是普通文本。需要注意的是要\n换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。\n----\n##### 这是一个换行符\\<br /\\>\n\n---\n\n这是含有`高亮`显示的`文字`。\n\n---\n\n##### 这是一个ul列表\n\n* 昵称：果冻虾仁\n* 别名：隔壁老王\n* 英文名：Jelly\n\n------------\n\n##### 这是一个ol列表\n1. 前端\n3. 后台\n4. 测试\n9. UI\n6. 产品\n2. Android\n3. IOS\n10. 运维\n\n----------\n\n##### 这是一个结构列表\n\n* 编程语言\n    * 脚本语言\n        * Python\n\n\n##### 这是一个特别显示的块级\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<br>\n``` javascript\ndocument.getElementById('obj');//javascript\n```\n----\n<img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\">\n----\n\n<a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a>\n\n----\n\n","slug":"My-first-Post","published":1,"updated":"2016-11-30T01:26:46.953Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw7e8vp60001c8teoami04em","content":"<h1 id=\"只是大标题\"><a href=\"#只是大标题\" class=\"headerlink\" title=\"只是大标题\"></a>只是大标题</h1><a id=\"more\"></a>\n<h3 id=\"这是一个多行文本\"><a href=\"#这是一个多行文本\" class=\"headerlink\" title=\"这是一个多行文本\"></a>这是一个多行文本</h3><pre><code>多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</div><div class=\"line\">  <span class=\"attr\">baseUrl</span>: <span class=\"string\">'weixin/js'</span>,</div><div class=\"line\">  <span class=\"attr\">paths</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'jquery'</span>: [</div><div class=\"line\">      <span class=\"string\">'//cdn.bootcss.com/jquery/1.12.4/jquery.min'</span>,</div><div class=\"line\">      <span class=\"string\">'lib/jquery/1.12.4/jquery.min'</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">'util'</span>: <span class=\"string\">'common/util'</span>,</div><div class=\"line\">    <span class=\"string\">'config'</span>: <span class=\"string\">'settings'</span>,</div><div class=\"line\">    <span class=\"comment\">// 实体类</span></div><div class=\"line\">    <span class=\"string\">'Result'</span>: <span class=\"string\">'model/result'</span>,</div><div class=\"line\">    <span class=\"string\">'User'</span>: <span class=\"string\">'model/user'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</code></pre><hr>\n<h3 id=\"这是一个单行文本\"><a href=\"#这是一个单行文本\" class=\"headerlink\" title=\"这是一个单行文本\"></a>这是一个单行文本</h3><pre><code>多行文本前加入两个Tab即可\n</code></pre><hr>\n<h3 id=\"文字被些字符包围\"><a href=\"#文字被些字符包围\" class=\"headerlink\" title=\"文字被些字符包围\"></a>文字被些字符包围</h3><blockquote>\n<p>文字被些字符包围</p>\n<p>只要再文字前面加上&gt;空格即可</p>\n<p>如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字<br>但&gt; 只能放在行首才有效</p>\n</blockquote>\n<hr>\n<h3 id=\"文字被些字符包围-多重包围\"><a href=\"#文字被些字符包围-多重包围\" class=\"headerlink\" title=\"文字被些字符包围,多重包围\"></a>文字被些字符包围,多重包围</h3><blockquote>\n<p>文字被些字符包围开始</p>\n<blockquote>\n<p>只要再文字前面加上&gt;空格即可</p>\n<blockquote>\n<p>如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字</p>\n<blockquote>\n<p>但&gt; 只能放在行首才有效</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h5 id=\"这是一个\"><a href=\"#这是一个\" class=\"headerlink\" title=\"这是一个\"></a>这是一个</h5><h5 id=\"这是一个有title的图片\"><a href=\"#这是一个有title的图片\" class=\"headerlink\" title=\"这是一个有title的图片\"></a>这是一个有title的图片</h5><p><img src=\"http://ohecg7vrp.bkt.clouddn.com/01.jpg\" alt=\"IMG\" title=\"Hello\"></p>\n<h5 id=\"这是一个超链接\"><a href=\"#这是一个超链接\" class=\"headerlink\" title=\"这是一个超链接\"></a>这是一个超链接</h5><p><a href=\"http://zmnaer.com\" title=\"zmnaer个人博客\" target=\"_blank\" rel=\"external\">github</a></p>\n<h5 id=\"这是一个有超链接的图片\"><a href=\"#这是一个有超链接的图片\" class=\"headerlink\" title=\"这是一个有超链接的图片\"></a>这是一个有超链接的图片</h5><p><a href=\"http://zmnaer.com\" target=\"_blank\" rel=\"external\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/14.gif\" alt=\"zz\" title=\"blog\"></a></p>\n<hr>\n<p>直接输入的文字就是普通文本。需要注意的是要</p>\n<h2 id=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\"><a href=\"#换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\" class=\"headerlink\" title=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签 。\"></a>换行的时候不能直接通过回车来换行，需要使用。<br>也就是html里面的标签 。</h2><h5 id=\"这是一个换行符\"><a href=\"#这是一个换行符\" class=\"headerlink\" title=\"这是一个换行符\\\"></a>这是一个换行符\\<br \\=\"\"></h5><hr>\n<p>这是含有<code>高亮</code>显示的<code>文字</code>。</p>\n<hr>\n<h5 id=\"这是一个ul列表\"><a href=\"#这是一个ul列表\" class=\"headerlink\" title=\"这是一个ul列表\"></a>这是一个ul列表</h5><ul>\n<li>昵称：果冻虾仁</li>\n<li>别名：隔壁老王</li>\n<li>英文名：Jelly</li>\n</ul>\n<hr>\n<h5 id=\"这是一个ol列表\"><a href=\"#这是一个ol列表\" class=\"headerlink\" title=\"这是一个ol列表\"></a>这是一个ol列表</h5><ol>\n<li>前端</li>\n<li>后台</li>\n<li>测试</li>\n<li>UI</li>\n<li>产品</li>\n<li>Android</li>\n<li>IOS</li>\n<li>运维</li>\n</ol>\n<hr>\n<h5 id=\"这是一个结构列表\"><a href=\"#这是一个结构列表\" class=\"headerlink\" title=\"这是一个结构列表\"></a>这是一个结构列表</h5><ul>\n<li>编程语言<ul>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"这是一个特别显示的块级\"><a href=\"#这是一个特别显示的块级\" class=\"headerlink\" title=\"这是一个特别显示的块级\"></a>这是一个特别显示的块级</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'obj'</span>);<span class=\"comment\">//javascript</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\"></h2><p><a href=\"http://zmnaer.com\" style=\"color:red;\" target=\"_blank\" rel=\"external\">zmnaer</a></p>\n<hr>\n","excerpt":"<h1 id=\"只是大标题\"><a href=\"#只是大标题\" class=\"headerlink\" title=\"只是大标题\"></a>只是大标题</h1>","more":"<h3 id=\"这是一个多行文本\"><a href=\"#这是一个多行文本\" class=\"headerlink\" title=\"这是一个多行文本\"></a>这是一个多行文本</h3><pre><code>多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n多行文本前加入两个Tab即可\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</div><div class=\"line\">  <span class=\"attr\">baseUrl</span>: <span class=\"string\">'weixin/js'</span>,</div><div class=\"line\">  <span class=\"attr\">paths</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'jquery'</span>: [</div><div class=\"line\">      <span class=\"string\">'//cdn.bootcss.com/jquery/1.12.4/jquery.min'</span>,</div><div class=\"line\">      <span class=\"string\">'lib/jquery/1.12.4/jquery.min'</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">'util'</span>: <span class=\"string\">'common/util'</span>,</div><div class=\"line\">    <span class=\"string\">'config'</span>: <span class=\"string\">'settings'</span>,</div><div class=\"line\">    <span class=\"comment\">// 实体类</span></div><div class=\"line\">    <span class=\"string\">'Result'</span>: <span class=\"string\">'model/result'</span>,</div><div class=\"line\">    <span class=\"string\">'User'</span>: <span class=\"string\">'model/user'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</code></pre><hr>\n<h3 id=\"这是一个单行文本\"><a href=\"#这是一个单行文本\" class=\"headerlink\" title=\"这是一个单行文本\"></a>这是一个单行文本</h3><pre><code>多行文本前加入两个Tab即可\n</code></pre><hr>\n<h3 id=\"文字被些字符包围\"><a href=\"#文字被些字符包围\" class=\"headerlink\" title=\"文字被些字符包围\"></a>文字被些字符包围</h3><blockquote>\n<p>文字被些字符包围</p>\n<p>只要再文字前面加上&gt;空格即可</p>\n<p>如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字<br>但&gt; 只能放在行首才有效</p>\n</blockquote>\n<hr>\n<h3 id=\"文字被些字符包围-多重包围\"><a href=\"#文字被些字符包围-多重包围\" class=\"headerlink\" title=\"文字被些字符包围,多重包围\"></a>文字被些字符包围,多重包围</h3><blockquote>\n<p>文字被些字符包围开始</p>\n<blockquote>\n<p>只要再文字前面加上&gt;空格即可</p>\n<blockquote>\n<p>如果你要换行的话,新起一行,输入&gt;空格即可,后面不接文字</p>\n<blockquote>\n<p>但&gt; 只能放在行首才有效</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h5 id=\"这是一个\"><a href=\"#这是一个\" class=\"headerlink\" title=\"这是一个\"></a>这是一个</h5><h5 id=\"这是一个有title的图片\"><a href=\"#这是一个有title的图片\" class=\"headerlink\" title=\"这是一个有title的图片\"></a>这是一个有title的图片</h5><p><img src=\"http://ohecg7vrp.bkt.clouddn.com/01.jpg\" alt=\"IMG\" title=\"Hello\"></p>\n<h5 id=\"这是一个超链接\"><a href=\"#这是一个超链接\" class=\"headerlink\" title=\"这是一个超链接\"></a>这是一个超链接</h5><p><a href=\"http://zmnaer.com\" title=\"zmnaer个人博客\">github</a></p>\n<h5 id=\"这是一个有超链接的图片\"><a href=\"#这是一个有超链接的图片\" class=\"headerlink\" title=\"这是一个有超链接的图片\"></a>这是一个有超链接的图片</h5><p><a href=\"http://zmnaer.com\"><img src=\"http://ohecg7vrp.bkt.clouddn.com/14.gif\" alt=\"zz\" title=\"blog\"></a></p>\n<hr>\n<p>直接输入的文字就是普通文本。需要注意的是要</p>\n<h2 id=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\"><a href=\"#换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签-。\" class=\"headerlink\" title=\"换行的时候不能直接通过回车来换行，需要使用。也就是html里面的标签 。\"></a>换行的时候不能直接通过回车来换行，需要使用。</br>也就是html里面的标签 。</h2><h5 id=\"这是一个换行符\"><a href=\"#这是一个换行符\" class=\"headerlink\" title=\"这是一个换行符\\\"></a>这是一个换行符\\<br /\\></h5><hr>\n<p>这是含有<code>高亮</code>显示的<code>文字</code>。</p>\n<hr>\n<h5 id=\"这是一个ul列表\"><a href=\"#这是一个ul列表\" class=\"headerlink\" title=\"这是一个ul列表\"></a>这是一个ul列表</h5><ul>\n<li>昵称：果冻虾仁</li>\n<li>别名：隔壁老王</li>\n<li>英文名：Jelly</li>\n</ul>\n<hr>\n<h5 id=\"这是一个ol列表\"><a href=\"#这是一个ol列表\" class=\"headerlink\" title=\"这是一个ol列表\"></a>这是一个ol列表</h5><ol>\n<li>前端</li>\n<li>后台</li>\n<li>测试</li>\n<li>UI</li>\n<li>产品</li>\n<li>Android</li>\n<li>IOS</li>\n<li>运维</li>\n</ol>\n<hr>\n<h5 id=\"这是一个结构列表\"><a href=\"#这是一个结构列表\" class=\"headerlink\" title=\"这是一个结构列表\"></a>这是一个结构列表</h5><ul>\n<li>编程语言<ul>\n<li>脚本语言<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"这是一个特别显示的块级\"><a href=\"#这是一个特别显示的块级\" class=\"headerlink\" title=\"这是一个特别显示的块级\"></a>这是一个特别显示的块级</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'obj'</span>);<span class=\"comment\">//javascript</span></div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"http://ohecg7vrp.bkt.clouddn.com/06.jpg\" width=\"200\"></h2><p><a href=\"http://zmnaer.com\" style=\"color:red;\">zmnaer</a></p>\n<hr>"},{"title":"实现input图片上传预览的各种坑","date":"2016-12-01T08:25:55.000Z","_content":"\ninput实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。\n<!--more-->\n\n大家请看以下代码：\n* html部分：\n```Bash\n<input type=\"file\" id=\"file\" name=\"file\">\n<div id=\"div1\"></div>\n```\n* js部分：\n```Javascript\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\td1.onchange = function(){\n        var fData = file.value;\n        console.log(fData);\n\t}\n}\n```\n一般想到上传，你首先就想获取路径的`路径`、`类型`、`大小`、`内容`等。\n想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。\n\n---\n对于图片路径，相信很多人可能都会用`file.value`来获取，那么恭喜你，你已经顺利进坑了，\n通过`控制台`你会很清晰的看到console.log打印出这样的结果：\n```\nC:/fakepath/logo.gif\n```\n0.0，奇了怪了，`fakepath`是什么鬼？我的文件路径明明是`C:/User/Desktop/01.jpg`，怎么变成这样了，先不去想它，继续尝试用其他方法获取。\n这时，也许有些人因为用惯了`jquery`，会脑洞大开的尝试这样做：\n\n```\nfile.src\n```\n但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。\n至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了`有事问度娘`，\"万能\"的度娘，果不其然给你罗列了数不胜数的相关博客和实例。\n于是乎，烂熟于心的`CV大法`便派上了用场，几经波折，似乎看到了一丝曙光。\n最奇葩的IE浏览器，终于出息了一次，得到了想要的结果`（路径）`，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。\n你可能会看到这样的结果：\n\n\t现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n\t而`chrome`浏览器压根就不支持获取，直接把路径值设置为`\"\"`。\n\n对于input中的`file`对象，当选取图片（文件）后它有个`files`子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括`name`，`size`，上传`时间戳`，`上传路径`等，当然这个`路径`值为`空`。\n因此，你可以根据这几个属性得到对应的属性值。\n```javascript\nname:file.files[0].name;\nsize:file.files[0].size;\n```\n一般获取图片路径，无非是想做预览效果。\n虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。\n这里要提到`FileReader`对象，简单提一下FileReader的`方法`和`事件`:\n![FileReader参数/事件](http://ohecg7vrp.bkt.clouddn.com/fileReader.png \"FileReader的方法和事件\")\n\n|\t\t\t\t\t参数/事件\t\t\t\t|\t\t\t\t\t描述\t\t\t\t|\n|:-----------------------------------------:|:-------------------------------------:|\n|方法||\n|abort|中断读取|\n|readAsText(file, [encoding])|将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。|\n|readAsBinaryString(file)|将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件|\n|readAsDataURL(file)|将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。|\n|事件||\n|onabort|数据读取中断时触发|\n|onerror|数据读取出错时触发|\n|onloadstart|数据读取开始时触发|\n|onload|数据读取成功完成时触发|\n|onloadend|数据读取完成时触发，无论成功失败|\n\n具体方法如下：\n```javascript\nvar reader = new FileReader();\nreader.readAsDataURL(file.files[0]);\n//调用readAsDataURL方法来读取选中的图像文件\nreader.onload = function (e){\n\tvar src = e.target.result;\n\tconsole.log(src);\n\tvar oImg = new Image();//创建一个image对象\n\t//也可以innerHTML的形式创建img元素，添加src\n\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n};\n```\n最后终于看到了期待已久的`庐山真面目`，到这里，基本就实现了上传图片预览功能。\n完整代码如下：\n```javascript\n<input type=\"file\" id=\"file\">\n<div id=\"div1\"></div>\n<script>\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\tfile.onchange = function(){\n\t\tvar fData = file.value;\n\t\tconsole.log(fData);//安全模式下的“伪路径”\n\t\tvar reader = new FileReader();\n\t\treader.readAsDataURL(file.files[0]);\n\t\t//调用readAsDataURL方法来读取选中的图像文件\n\t\treader.onload = function (e){\n\t\t\tvar src = e.target.result;\n\t\t\tconsole.log(src);//编码过的图片\n\t\t\tvar oImg = new Image();//创建一个image对象\n\t\t\t//也可以innerHTML的形式创建img元素，添加src\n\t\t\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\t\t\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n\t\t};\n\t}\n}\n</script>\n```\n如有欠缺，不当，可在评论中提出。\n>> 谢谢~O(∩_∩)O~","source":"_posts/inputUpdate.md","raw":"---\ntitle: 实现input图片上传预览的各种坑\ndate: 2016-12-01 16:25:55\ntags:\n---\n\ninput实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。\n<!--more-->\n\n大家请看以下代码：\n* html部分：\n```Bash\n<input type=\"file\" id=\"file\" name=\"file\">\n<div id=\"div1\"></div>\n```\n* js部分：\n```Javascript\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\td1.onchange = function(){\n        var fData = file.value;\n        console.log(fData);\n\t}\n}\n```\n一般想到上传，你首先就想获取路径的`路径`、`类型`、`大小`、`内容`等。\n想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。\n\n---\n对于图片路径，相信很多人可能都会用`file.value`来获取，那么恭喜你，你已经顺利进坑了，\n通过`控制台`你会很清晰的看到console.log打印出这样的结果：\n```\nC:/fakepath/logo.gif\n```\n0.0，奇了怪了，`fakepath`是什么鬼？我的文件路径明明是`C:/User/Desktop/01.jpg`，怎么变成这样了，先不去想它，继续尝试用其他方法获取。\n这时，也许有些人因为用惯了`jquery`，会脑洞大开的尝试这样做：\n\n```\nfile.src\n```\n但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。\n至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了`有事问度娘`，\"万能\"的度娘，果不其然给你罗列了数不胜数的相关博客和实例。\n于是乎，烂熟于心的`CV大法`便派上了用场，几经波折，似乎看到了一丝曙光。\n最奇葩的IE浏览器，终于出息了一次，得到了想要的结果`（路径）`，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。\n你可能会看到这样的结果：\n\n\t现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n\t而`chrome`浏览器压根就不支持获取，直接把路径值设置为`\"\"`。\n\n对于input中的`file`对象，当选取图片（文件）后它有个`files`子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括`name`，`size`，上传`时间戳`，`上传路径`等，当然这个`路径`值为`空`。\n因此，你可以根据这几个属性得到对应的属性值。\n```javascript\nname:file.files[0].name;\nsize:file.files[0].size;\n```\n一般获取图片路径，无非是想做预览效果。\n虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。\n这里要提到`FileReader`对象，简单提一下FileReader的`方法`和`事件`:\n![FileReader参数/事件](http://ohecg7vrp.bkt.clouddn.com/fileReader.png \"FileReader的方法和事件\")\n\n|\t\t\t\t\t参数/事件\t\t\t\t|\t\t\t\t\t描述\t\t\t\t|\n|:-----------------------------------------:|:-------------------------------------:|\n|方法||\n|abort|中断读取|\n|readAsText(file, [encoding])|将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。|\n|readAsBinaryString(file)|将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件|\n|readAsDataURL(file)|将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。|\n|事件||\n|onabort|数据读取中断时触发|\n|onerror|数据读取出错时触发|\n|onloadstart|数据读取开始时触发|\n|onload|数据读取成功完成时触发|\n|onloadend|数据读取完成时触发，无论成功失败|\n\n具体方法如下：\n```javascript\nvar reader = new FileReader();\nreader.readAsDataURL(file.files[0]);\n//调用readAsDataURL方法来读取选中的图像文件\nreader.onload = function (e){\n\tvar src = e.target.result;\n\tconsole.log(src);\n\tvar oImg = new Image();//创建一个image对象\n\t//也可以innerHTML的形式创建img元素，添加src\n\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n};\n```\n最后终于看到了期待已久的`庐山真面目`，到这里，基本就实现了上传图片预览功能。\n完整代码如下：\n```javascript\n<input type=\"file\" id=\"file\">\n<div id=\"div1\"></div>\n<script>\nwindow.onload = function(){\n\tvar file = document.getElementById('file');\n\tvar div1 = document.getElementById('div1');\n\tfile.onchange = function(){\n\t\tvar fData = file.value;\n\t\tconsole.log(fData);//安全模式下的“伪路径”\n\t\tvar reader = new FileReader();\n\t\treader.readAsDataURL(file.files[0]);\n\t\t//调用readAsDataURL方法来读取选中的图像文件\n\t\treader.onload = function (e){\n\t\t\tvar src = e.target.result;\n\t\t\tconsole.log(src);//编码过的图片\n\t\t\tvar oImg = new Image();//创建一个image对象\n\t\t\t//也可以innerHTML的形式创建img元素，添加src\n\t\t\toImg.src = src;//把上传图片的路径赋值给新的image对象\n\t\t\tdiv1.appendChild(oImg);//把img添加到div1中，显示预览\n\t\t};\n\t}\n}\n</script>\n```\n如有欠缺，不当，可在评论中提出。\n>> 谢谢~O(∩_∩)O~","slug":"inputUpdate","published":1,"updated":"2016-12-02T04:18:20.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciw7e8vpx0002c8tem802oc4w","content":"<p>input实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。<br><a id=\"more\"></a></p>\n<p>大家请看以下代码：</p>\n<ul>\n<li><p>html部分：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input <span class=\"built_in\">type</span>=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>js部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\td1.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(fData);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>一般想到上传，你首先就想获取路径的<code>路径</code>、<code>类型</code>、<code>大小</code>、<code>内容</code>等。<br>想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。</p>\n<hr>\n<p>对于图片路径，相信很多人可能都会用<code>file.value</code>来获取，那么恭喜你，你已经顺利进坑了，<br>通过<code>控制台</code>你会很清晰的看到console.log打印出这样的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:/fakepath/logo.gif</div></pre></td></tr></table></figure></p>\n<p>0.0，奇了怪了，<code>fakepath</code>是什么鬼？我的文件路径明明是<code>C:/User/Desktop/01.jpg</code>，怎么变成这样了，先不去想它，继续尝试用其他方法获取。<br>这时，也许有些人因为用惯了<code>jquery</code>，会脑洞大开的尝试这样做：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">file.src</div></pre></td></tr></table></figure>\n<p>但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。<br>至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了<code>有事问度娘</code>，”万能”的度娘，果不其然给你罗列了数不胜数的相关博客和实例。<br>于是乎，烂熟于心的<code>CV大法</code>便派上了用场，几经波折，似乎看到了一丝曙光。<br>最奇葩的IE浏览器，终于出息了一次，得到了想要的结果<code>（路径）</code>，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。<br>你可能会看到这样的结果：</p>\n<pre><code>现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n而`chrome`浏览器压根就不支持获取，直接把路径值设置为`&quot;&quot;`。\n</code></pre><p>对于input中的<code>file</code>对象，当选取图片（文件）后它有个<code>files</code>子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括<code>name</code>，<code>size</code>，上传<code>时间戳</code>，<code>上传路径</code>等，当然这个<code>路径</code>值为<code>空</code>。<br>因此，你可以根据这几个属性得到对应的属性值。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:file.files[<span class=\"number\">0</span>].name;</div><div class=\"line\">size:file.files[<span class=\"number\">0</span>].size;</div></pre></td></tr></table></figure></p>\n<p>一般获取图片路径，无非是想做预览效果。<br>虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。<br>这里要提到<code>FileReader</code>对象，简单提一下FileReader的<code>方法</code>和<code>事件</code>:<br><img src=\"http://ohecg7vrp.bkt.clouddn.com/fileReader.png\" alt=\"FileReader参数/事件\" title=\"FileReader的方法和事件\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数/事件</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">abort</td>\n<td style=\"text-align:center\">中断读取</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsText(file, [encoding])</td>\n<td style=\"text-align:center\">将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsBinaryString(file)</td>\n<td style=\"text-align:center\">将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsDataURL(file)</td>\n<td style=\"text-align:center\">将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">事件</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onabort</td>\n<td style=\"text-align:center\">数据读取中断时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onerror</td>\n<td style=\"text-align:center\">数据读取出错时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadstart</td>\n<td style=\"text-align:center\">数据读取开始时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onload</td>\n<td style=\"text-align:center\">数据读取成功完成时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadend</td>\n<td style=\"text-align:center\">数据读取完成时触发，无论成功失败</td>\n</tr>\n</tbody>\n</table>\n<p>具体方法如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">reader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\"><span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(src);</div><div class=\"line\">\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>最后终于看到了期待已久的<code>庐山真面目</code>，到这里，基本就实现了上传图片预览功能。<br>完整代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=\"div1\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\tfile.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(fData);<span class=\"comment\">//安全模式下的“伪路径”</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\treader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t<span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(src);<span class=\"comment\">//编码过的图片</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\t\t\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\t\t\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure></p>\n<p>如有欠缺，不当，可在评论中提出。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>\n","excerpt":"<p>input实现图片上传看似很简单，但只有当自己真正去做时，才发现到处都是坑，一不小心就掉进去了。<br>","more":"</p>\n<p>大家请看以下代码：</p>\n<ul>\n<li><p>html部分：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input <span class=\"built_in\">type</span>=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span> name=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>js部分：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\td1.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(fData);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>一般想到上传，你首先就想获取路径的<code>路径</code>、<code>类型</code>、<code>大小</code>、<code>内容</code>等。<br>想实现图片预览，当然就得获取图片的路径，下面就来一步一步实现吧。</p>\n<hr>\n<p>对于图片路径，相信很多人可能都会用<code>file.value</code>来获取，那么恭喜你，你已经顺利进坑了，<br>通过<code>控制台</code>你会很清晰的看到console.log打印出这样的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">C:/fakepath/logo.gif</div></pre></td></tr></table></figure></p>\n<p>0.0，奇了怪了，<code>fakepath</code>是什么鬼？我的文件路径明明是<code>C:/User/Desktop/01.jpg</code>，怎么变成这样了，先不去想它，继续尝试用其他方法获取。<br>这时，也许有些人因为用惯了<code>jquery</code>，会脑洞大开的尝试这样做：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">file.src</div></pre></td></tr></table></figure>\n<p>但结果却出乎你的意料，竟然不报错，更不用说得到真正的src了。<br>至此，你肯定有些气愤，却依旧不肯放弃，自然而然，想到了<code>有事问度娘</code>，”万能”的度娘，果不其然给你罗列了数不胜数的相关博客和实例。<br>于是乎，烂熟于心的<code>CV大法</code>便派上了用场，几经波折，似乎看到了一丝曙光。<br>最奇葩的IE浏览器，终于出息了一次，得到了想要的结果<code>（路径）</code>，而火狐，谷歌上却还是没有任何反馈。进而，继续查阅资料，浏览博客。<br>你可能会看到这样的结果：</p>\n<pre><code>现在比较主流、`高版本`的浏览器，像是`IE`，`firfox`，因为出于`安全`的考虑，一般都会在`设置`中禁止获取文件的`路径`，\n而`chrome`浏览器压根就不支持获取，直接把路径值设置为`&quot;&quot;`。\n</code></pre><p>对于input中的<code>file</code>对象，当选取图片（文件）后它有个<code>files</code>子对象，你选取一张图片的时候，它的length为1，而files子对象有几大属性，其中就包括<code>name</code>，<code>size</code>，上传<code>时间戳</code>，<code>上传路径</code>等，当然这个<code>路径</code>值为<code>空</code>。<br>因此，你可以根据这几个属性得到对应的属性值。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">name:file.files[<span class=\"number\">0</span>].name;</div><div class=\"line\">size:file.files[<span class=\"number\">0</span>].size;</div></pre></td></tr></table></figure></p>\n<p>一般获取图片路径，无非是想做预览效果。<br>虽然浏览器不让获取X:/xxx/xxx/xxx.png这样的路径，但还是有办法得到它，只不过它经过编码了，你看不懂罢了。<br>这里要提到<code>FileReader</code>对象，简单提一下FileReader的<code>方法</code>和<code>事件</code>:<br><img src=\"http://ohecg7vrp.bkt.clouddn.com/fileReader.png\" alt=\"FileReader参数/事件\" title=\"FileReader的方法和事件\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数/事件</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">abort</td>\n<td style=\"text-align:center\">中断读取</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsText(file, [encoding])</td>\n<td style=\"text-align:center\">将文件读取为文本该方法有两个参数，其中第二个参数是文本的编码方式，默认值为 UTF-8。这个方法非常容易理解，将文件以文本方式读取，读取的结果即是这个文本文件中的内容。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsBinaryString(file)</td>\n<td style=\"text-align:center\">将文件读取二进制码通常我们将它传送到后端，后端可以通过这段字符串存储文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">readAsDataURL(file)</td>\n<td style=\"text-align:center\">将文件读取为DataURL将文件读取为一串Data URL字符串，将小文件以一种特殊格式的URL地址直接读入页面。小文件指图像与html等格式的文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">事件</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onabort</td>\n<td style=\"text-align:center\">数据读取中断时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onerror</td>\n<td style=\"text-align:center\">数据读取出错时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadstart</td>\n<td style=\"text-align:center\">数据读取开始时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onload</td>\n<td style=\"text-align:center\">数据读取成功完成时触发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onloadend</td>\n<td style=\"text-align:center\">数据读取完成时触发，无论成功失败</td>\n</tr>\n</tbody>\n</table>\n<p>具体方法如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">reader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\"><span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">reader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(src);</div><div class=\"line\">\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>最后终于看到了期待已久的<code>庐山真面目</code>，到这里，基本就实现了上传图片预览功能。<br>完整代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=<span class=\"string\">\"file\"</span> id=<span class=\"string\">\"file\"</span>&gt;</div><div class=\"line\">&lt;div id=\"div1\"&gt;&lt;/div&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> file = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>);</div><div class=\"line\">\t<span class=\"keyword\">var</span> div1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'div1'</span>);</div><div class=\"line\">\tfile.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> fData = file.value;</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(fData);<span class=\"comment\">//安全模式下的“伪路径”</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();</div><div class=\"line\">\t\treader.readAsDataURL(file.files[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t<span class=\"comment\">//调用readAsDataURL方法来读取选中的图像文件</span></div><div class=\"line\">\t\treader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> src = e.target.result;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(src);<span class=\"comment\">//编码过的图片</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">var</span> oImg = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//创建一个image对象</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//也可以innerHTML的形式创建img元素，添加src</span></div><div class=\"line\">\t\t\toImg.src = src;<span class=\"comment\">//把上传图片的路径赋值给新的image对象</span></div><div class=\"line\">\t\t\tdiv1.appendChild(oImg);<span class=\"comment\">//把img添加到div1中，显示预览</span></div><div class=\"line\">\t\t&#125;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></div></pre></td></tr></table></figure></p>\n<p>如有欠缺，不当，可在评论中提出。</p>\n<blockquote>\n<blockquote>\n<p>谢谢~O(∩_∩)O~</p>\n</blockquote>\n</blockquote>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}